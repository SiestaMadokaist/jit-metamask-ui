{
  "contractName": "VaultStakingBeli",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "internalType": "struct Vault.ErcConfig",
          "name": "_erc",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "earnedToBELIPath",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "earnedToToken0Path",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "earnedToToken1Path",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "token0ToEarnedPath",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "token1ToEarnedPath",
              "type": "address[]"
            }
          ],
          "internalType": "struct Vault.ConversionPath",
          "name": "_conversionPath",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "controllerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyBackRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "entranceFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct Vault.FeeConfig",
          "name": "_fees",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isCAKEStaking",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isSameAssetDeposit",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyBackAddress",
          "type": "address"
        }
      ],
      "name": "SetBuyBackAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "govAddress",
          "type": "address"
        }
      ],
      "name": "SetGov",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardsAddress",
          "type": "address"
        }
      ],
      "name": "SetRewardsAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entranceFeeFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "controllerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyBackRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "earnToBeliRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slippageFactor",
          "type": "uint256"
        }
      ],
      "name": "SetSettings",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "uniRouterAddress",
          "type": "address"
        }
      ],
      "name": "SetUniRouterAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BELIAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "accEarnBELI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "accEarnBELIPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "accWithdrawnEarnBELI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "beliFarmAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnReceiptForShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buyBackRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buyBackRateMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buyBackRateUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "controllerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "controllerFeeMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "controllerFeeUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "convertDustToEarned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnToBeliRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "earnToBeliRateMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "earnToBeliUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "earnedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToBELIPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToToken0Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToToken1Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "entranceFeeFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "entranceFeeFactorLL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "entranceFeeFactorMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "farm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "govAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAutoComp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isCAKEStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOlympusStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isSameAssetDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "lastAccEarnBELI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "lastEarnBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "lockedUntil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintShareToReceipt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyBackAddress",
          "type": "address"
        }
      ],
      "name": "setBuyBackAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsAddress",
          "type": "address"
        }
      ],
      "name": "setRewardsAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entranceFeeFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_controllerFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyBackRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slippageFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_earnToBeli",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniRouterAddress",
          "type": "address"
        }
      ],
      "name": "setUniRouterAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharesTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "slippageFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "slippageFactorUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token0Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token0ToEarnedPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token1Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token1ToEarnedPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferConvertedEarn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "wantLockedTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "wbnbAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "withdrawEarly",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorLL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "wrapBNB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct Vault.ErcConfig\",\"name\":\"_erc\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"earnedToBELIPath\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"earnedToToken0Path\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"earnedToToken1Path\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"token0ToEarnedPath\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"token1ToEarnedPath\",\"type\":\"address[]\"}],\"internalType\":\"struct Vault.ConversionPath\",\"name\":\"_conversionPath\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"controllerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyBackRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawFee\",\"type\":\"uint256\"}],\"internalType\":\"struct Vault.FeeConfig\",\"name\":\"_fees\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isCAKEStaking\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isSameAssetDeposit\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyBackAddress\",\"type\":\"address\"}],\"name\":\"SetBuyBackAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"govAddress\",\"type\":\"address\"}],\"name\":\"SetGov\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsAddress\",\"type\":\"address\"}],\"name\":\"SetRewardsAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entranceFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"controllerFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyBackRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earnToBeliRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slippageFactor\",\"type\":\"uint256\"}],\"name\":\"SetSettings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"uniRouterAddress\",\"type\":\"address\"}],\"name\":\"SetUniRouterAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BELIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accEarnBELI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accEarnBELIPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accWithdrawnEarnBELI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beliFarmAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnReceiptForShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRateMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRateUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFeeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFeeUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertDustToEarned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnToBeliRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnToBeliRateMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnToBeliUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToBELIPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToToken0Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToToken1Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactorLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactorMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAutoComp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCAKEStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOlympusStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSameAssetDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAccEarnBELI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEarnBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintShareToReceipt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyBackAddress\",\"type\":\"address\"}],\"name\":\"setBuyBackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsAddress\",\"type\":\"address\"}],\"name\":\"setRewardsAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entranceFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_controllerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyBackRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippageFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_earnToBeli\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniRouterAddress\",\"type\":\"address\"}],\"name\":\"setUniRouterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageFactorUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"token0ToEarnedPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"token1ToEarnedPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferConvertedEarn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantLockedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbnbAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"withdrawEarly\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Vault_BELI.sol\":\"VaultStakingBeli\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"project:/src/contracts/Vault.sol\":{\"keccak256\":\"0xaa93c6b21f050c6d2c09bbb3eb1e9ca018e17e6af8f3f2e0b5264623f614f43e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0738dd3a6910f63bfaec9d3121d3494c5c28bd852a9b353ee5f0c867d99761\",\"dweb:/ipfs/QmdFF5RC3Fk4ZQNbAhBNZRVnu9ZPbT4gnWGjKyquAmxqbs\"]},\"project:/src/contracts/Vault_BELI.sol\":{\"keccak256\":\"0x9135910d329f2ac11365e66bea255980d332e8d64249db08307bb02ff179c85b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6dce0debdd5c3d1d9ea722a71a14d5bf3126370a91c6324d4616685674a513c\",\"dweb:/ipfs/QmVXawqe4ov8SRYoqHWhos37ao2151H75xsc9Hwrnp1bd4\"]},\"project:/src/contracts/interfaces/IPancakeRouter01.sol\":{\"keccak256\":\"0xa058b5e8883ae848443fba1364fb44794f57c753121dfcd95713c4e35160c48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fee2fc0090ded0e4fe1341902c03e200e94f5814a54e83b9682d7dcc99ebfb51\",\"dweb:/ipfs/QmeA8PYasTgm9sUmDabUGwsafkeQpTRCCXc9VtW2Whmgwx\"]},\"project:/src/contracts/interfaces/IPancakeRouter02.sol\":{\"keccak256\":\"0x52de4e9a7935404e1f130ddd53c4fbb1cbcb81a90e3b2551798185830063ca7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1db32cdb9a75c257e6aff3c4481a3d82c5f9a828f9b69589f600937f6d64bc3e\",\"dweb:/ipfs/QmWQQ7ZMguz8pbqtoLpj8GkpoFoqLVPfgQEEQC1JfcnhwD\"]},\"project:/src/contracts/interfaces/IPancakeswapFarm.sol\":{\"keccak256\":\"0x0c098550501ad6513e265beddbfac1337d0093ae55e4888ea6e6680e6ba75cab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2d0aa2234ee1908bbb2e1e34025f18bb1af55c306e6a3074d52f4e1709bdb51\",\"dweb:/ipfs/QmX3t5abp4tj5UCzgoxXbuR8kEbdQkmw5x7kujaexVgMmm\"]},\"project:/src/contracts/interfaces/IWBNB.sol\":{\"keccak256\":\"0x09448869ae491e183be3cf710cea87ff7c37fc7e7a544736153b38099b750eb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbaee6a19aebd2813d6b5221b074095c3a2e8431836ef48f19213d78b72f62c3\",\"dweb:/ipfs/QmaHtYRJenFwnX57He6dZTKS2r17c8Jx23rQ8K7TNjDgn4\"]}},\"version\":1}",
  "bytecode": "0x608060405260006013819055601481905560158190556113886016819055601755611f40601855601980546001600160a01b03191661dead179055612706601b55612710601c556103b6601d55601e819055601f81905560208190556021553480156200006b57600080fd5b5060405162003e9238038062003e928339810160408190526200008e9162000944565b865160208801516000620000a1620004d2565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003e72833981519152908290a350600180556002805460ff191690558151620000fd906006906020850190620005a7565b50805162000113906007906020840190620005a7565b50506008805460ff1916601217905550835184906000906200013157fe5b6020026020010151600f60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836001815181106200016d57fe5b6020026020010151601260006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600281518110620001a957fe5b6020026020010151601060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600381518110620001e557fe5b6020026020010151601160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836004815181106200022157fe5b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836005815181106200025d57fe5b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836006815181106200029957fe5b6020026020010151600c60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600781518110620002d557fe5b6020026020010151600d60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836008815181106200031157fe5b6020908102919091010151600880546009868155600160281b600160c81b0319909116650100000000006001600160a01b03909416939093029290921761ff001916610100851515021762ff0000191662010000841515021763ff00000019169055845185919081106200038157fe5b602090810291909101810151600e80546001600160a01b0319166001600160a01b0390921691909117905586518051620003c09260229201906200062c565b506020808701518051620003d99260239201906200062c565b5060408601518051620003f5916024916020909101906200062c565b506060860151805162000411916025916020909101906200062c565b50608086015180516200042d916026916020909101906200062c565b50845160165583518490600a9081106200044357fe5b6020026020010151601a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846020015160178190555083600b815181106200048a57fe5b6020908102919091010151601980546001600160a01b0319166001600160a01b039283161790556000601855601054620004c59116620004d6565b5050505050505062000b15565b3390565b620004e0620004d2565b6001600160a01b0316620004f362000598565b6001600160a01b031614620005255760405162461bcd60e51b81526004016200051c9062000ab9565b60405180910390fd5b6001600160a01b0381166200054e5760405162461bcd60e51b81526004016200051c9062000a73565b600080546040516001600160a01b038085169392169160008051602062003e7283398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005ea57805160ff19168380011785556200061a565b828001600101855582156200061a579182015b828111156200061a578251825591602001919060010190620005fd565b506200062892915062000692565b5090565b82805482825590600052602060002090810192821562000684579160200282015b828111156200068457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200064d565b5062000628929150620006a9565b5b8082111562000628576000815560010162000693565b5b80821115620006285780546001600160a01b0319168155600101620006aa565b600082601f830112620006db578081fd5b81516001600160401b03811115620006f1578182fd5b60208082026200070382820162000aee565b838152935081840185830182870184018810156200072057600080fd5b60009250825b85811015620007595781516001600160a01b038116811462000746578485fd5b8352918401919084019060010162000726565b50505050505092915050565b805180151581146200077657600080fd5b92915050565b600082601f8301126200078d578081fd5b81516001600160401b03811115620007a3578182fd5b6020620007b9601f8301601f1916820162000aee565b92508183528481838601011115620007d057600080fd5b60005b82811015620007f0578481018201518482018301528101620007d3565b82811115620008025760008284860101525b50505092915050565b600060a082840312156200081d578081fd5b6200082960a062000aee565b82519091506001600160401b03808211156200084457600080fd5b6200085285838601620006ca565b835260208401519150808211156200086957600080fd5b6200087785838601620006ca565b602084015260408401519150808211156200089157600080fd5b6200089f85838601620006ca565b60408401526060840151915080821115620008b957600080fd5b620008c785838601620006ca565b60608401526080840151915080821115620008e157600080fd5b50620008f084828501620006ca565b60808301525092915050565b6000608082840312156200090e578081fd5b6200091a608062000aee565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b6000806000806000806000610140888a03121562000960578283fd5b87516001600160401b038082111562000977578485fd5b908901906040828c0312156200098b578485fd5b62000997604062000aee565b825182811115620009a6578687fd5b620009b48d8286016200077c565b825250602083015182811115620009c9578687fd5b620009d78d8286016200077c565b6020830152508099505060208a0151915080821115620009f5578485fd5b62000a038b838c016200080b565b975062000a148b60408c01620008fc565b965060c08a015191508082111562000a2a578485fd5b5062000a398a828b01620006ca565b94505060e0880151925062000a53896101008a0162000765565b915062000a65896101208a0162000765565b905092959891949750929550565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040518181016001600160401b038111828210171562000b0d57600080fd5b604052919050565b61334d8062000b256000396000f3fe608060405234801561001057600080fd5b50600436106104955760003560e01c8063846d9e1711610262578063c11c2e9211610151578063e5dd455a116100ce578063f106845411610092578063f106845414610813578063f2dc46481461081b578063f2fde38b14610823578063f3fef3a314610836578063f6bd477414610849578063ffbd3b1f1461085c57610495565b8063e5dd455a146107e8578063e7198474146107f0578063e7a03679146107f8578063e9e443df14610800578063ee50dc341461052557610495565b8063cfad57a211610115578063cfad57a2146107aa578063d389800f146107bd578063d5b09163146107c5578063d7cb416f146107cd578063dd62ed3e146107d557610495565b8063c11c2e9214610761578063c19cbd4814610769578063c302a4d01461077c578063c8e3d18b14610784578063cc917f4e1461079757610495565b80639fc33a9f116101df578063b3545c01116101a3578063b3545c01146104c3578063b74cd24214610736578063b77050e71461073e578063bd5f119514610751578063c0973eed1461075957610495565b80639fc33a9f146106ed578063a457c2d7146106f5578063a9059cbb14610708578063ad740f8c1461071b578063ae7d7d811461072e57610495565b80639331aace116102265780639331aace146106af57806395d89b41146106b757806396e9aff8146106bf5780639a246643146106d25780639bc289f1146106da57610495565b8063846d9e171461068457806385f02dd61461068c578063866b2018146104c35780638906758d146106945780638da5cb5b146106a757610495565b806346008a071161038957806367057b6c11610306578063715018a6116102ca578063715018a61461065457806377c7b8fc1461065c578063783478ad146106645780637ff36fbe1461066c57806383fa0ef9146106745780638456cb591461067c57610495565b806367057b6c1461052557806367206d401461061e57806368f5416214610631578063693a090b1461063957806370a082311461064157610495565b80635c975abb1161034d5780635c975abb146105e05780635da79d63146105e857806360662c42146105fb57806363fe3e3a1461060e578063655bee371461061657610495565b806346008a07146105b557806347e7ef24146105bd57806348a0d754146105d05780634d9f7bb2146105255780635bc27d4b146105d857610495565b806323b872dd1161041757806339509351116103db57806339509351146105825780633f4ba83a1461059557806342da4eb31461059d57806344a3955e146105a557806345c20fc2146105ad57610495565b806323b872dd1461053d5780632717eff3146105255780632f1ce2c514610550578063313ce5671461056357806336e9332d1461057857610495565b80630fa4e01e1161045e5780630fa4e01e146105155780631334903f1461051d5780631672d7b514610525578063178a8d071461052d57806318160ddd1461053557610495565b80627a2ae31461049a578063061c7d48146104c357806306fdde03146104d85780630772efb4146104ed578063095ea7b3146104f5575b600080fd5b6104ad6104a8366004612986565b610864565b6040516104ba9190612a57565b60405180910390f35b6104cb61088b565b6040516104ba9190613166565b6104e0610891565b6040516104ba9190612acd565b6104cb610928565b610508610503366004612866565b61092e565b6040516104ba9190612ac2565b6104cb61094c565b6104cb610952565b6104cb610958565b6104cb61095e565b6104cb610964565b61050861054b366004612826565b61096a565b6104cb61055e366004612866565b6109f2565b61056b610b68565b6040516104ba91906131ec565b610580610b71565b005b610508610590366004612866565b610ba7565b610580610bf5565b6104cb610c29565b6104cb610c2f565b610508610c35565b6104ad610c46565b6104cb6105cb366004612866565b610c55565b6104cb610eac565b6104ad610f32565b610508610f41565b6105806105f63660046127d7565b610f4a565b6104ad610609366004612986565b610fca565b6104ad610fd7565b6104ad610fe6565b61058061062c366004612890565b610ff5565b6104cb611094565b6104ad61109a565b6104cb61064f3660046127d7565b6110a9565b6105806110c4565b6104cb61114d565b6104ad61118a565b6104ad611199565b6104cb6111a8565b6105806111ae565b6105086111e0565b6104cb6111ee565b6105806106a23660046127d7565b6111f4565b6104ad611269565b6104cb611278565b6104e061127e565b6104ad6106cd366004612986565b6112df565b6105086112ec565b6104cb6106e83660046127d7565b6112fb565b6104ad611301565b610508610703366004612866565b611319565b610508610716366004612866565b611381565b6105806107293660046127d7565b611395565b6104cb61140a565b6104cb611410565b6104ad61074c366004612986565b611416565b6104cb611423565b6104ad611429565b610580611438565b6104cb610777366004612866565b61175f565b6104cb6117dd565b6104ad610792366004612986565b6117e3565b6105806107a53660046129b6565b6117f0565b6105806107b83660046127d7565b611970565b6105806119e5565b610580611a32565b6104ad611a64565b6104cb6107e33660046127f2565b611a73565b610508611a9e565b6104ad611aae565b6104ad611abd565b61058061080e366004612866565b611acc565b6104cb611b15565b6104cb611b1b565b6105806108313660046127d7565b611b21565b6104cb610844366004612866565b611be1565b6104cb610857366004612866565b611dc2565b6104cb611e2c565b6026818154811061087157fe5b6000918252602090912001546001600160a01b0316905081565b61138881565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505090505b90565b60205481565b600061094261093b611e32565b8484611e36565b5060015b92915050565b60135481565b601b5481565b61271081565b60175481565b60055490565b6000610977848484611eea565b6109e784610983611e32565b6109e2856040518060600160405280602881526020016132cb602891396001600160a01b038a166000908152600460205260408120906109c1611e32565b6001600160a01b031681526020810191909152604001600020549190611fff565b611e36565b5060015b9392505050565b60006109fc611e32565b6001600160a01b0316610a0d611269565b6001600160a01b031614610a3c5760405162461bcd60e51b8152600401610a3390612f51565b60405180910390fd5b6011546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a6d903090600401612a57565b60206040518083038186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd919061299e565b905080831115610acb578092505b60115460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610afd9087908790600401612aa9565b602060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190612966565b50602154610b5d908461202b565b602155509092915050565b60085460ff1690565b60026001541415610b945760405162461bcd60e51b8152600401610a33906130f8565b6002600155610ba1610c27565b60018055565b6000610942610bb4611e32565b846109e28560046000610bc5611e32565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061202b565b6012546001600160a01b03163314610c1f5760405162461bcd60e51b8152600401610a3390612cf4565b610c27612050565b565b60145481565b60155481565b600854640100000000900460ff1681565b6012546001600160a01b031681565b6000610c5f611e32565b6001600160a01b0316610c70611269565b6001600160a01b031614610c965760405162461bcd60e51b8152600401610a3390612f51565b60026001541415610cb95760405162461bcd60e51b8152600401610a33906130f8565b6002600155610cc6610f41565b15610ce35760405162461bcd60e51b8152600401610a3390612e34565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610d14903090600401612a57565b60206040518083038186803b158015610d2c57600080fd5b505afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d64919061299e565b600a54909150610d7f906001600160a01b03163330866120be565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610db0903090600401612a57565b60206040518083038186803b158015610dc857600080fd5b505afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e00919061299e565b9050610e0c818361211c565b601454909450849015801590610e2457506000601554115b15610e5f57610e5c612710610e56601454610e56601b54610e506015548c61214490919063ffffffff16565b90612144565b9061217e565b90505b601554610e6c908261202b565b6015556008546301000000900460ff1615610e8e57610e89610c27565b610e9f565b601454610e9b908661202b565b6014555b6001805595945050505050565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610edd903090600401612a57565b60206040518083038186803b158015610ef557600080fd5b505afa158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d919061299e565b905090565b6010546001600160a01b031681565b60025460ff1690565b6012546001600160a01b03163314610f745760405162461bcd60e51b8152600401610a3390612cf4565b600e80546001600160a01b0319166001600160a01b0383161790556040517f384f1dcb79da4071839c471d7c81884a43fb946a527f3661fdee5904adc8f65790610fbf908390612a57565b60405180910390a150565b6022818154811061087157fe5b600f546001600160a01b031681565b6011546001600160a01b031681565b6012546001600160a01b0316331461101f5760405162461bcd60e51b8152600401610a3390612cf4565b600d546001600160a01b038481169116141561104d5760405162461bcd60e51b8152600401610a3390612b43565b600a546001600160a01b038481169116141561107b5760405162461bcd60e51b8152600401610a3390612b43565b61108f6001600160a01b03841682846121b0565b505050565b601c5481565b600e546001600160a01b031681565b6001600160a01b031660009081526003602052604090205490565b6110cc611e32565b6001600160a01b03166110dd611269565b6001600160a01b0316146111035760405162461bcd60e51b8152600401610a3390612f51565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000611157610964565b61116a5750670de0b6b3a7640000610925565b610f2d611175610964565b601454610e5690670de0b6b3a7640000612144565b6019546001600160a01b031681565b600b546001600160a01b031681565b601e5481565b6012546001600160a01b031633146111d85760405162461bcd60e51b8152600401610a3390612cf4565b610c276121cf565b600854610100900460ff1681565b60165481565b6012546001600160a01b0316331461121e5760405162461bcd60e51b8152600401610a3390612cf4565b601a80546001600160a01b0319166001600160a01b0383161790556040517fa69f1931be99336e049905baa11d21ed44204d7686e46b4344404d80d47c298890610fbf908390612a57565b6000546001600160a01b031690565b60215481565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561091d5780601f106108f25761010080835404028352916020019161091d565b6024818154811061087157fe5b60085462010000900460ff1681565b50600090565b6008546501000000000090046001600160a01b031681565b6000610942611326611e32565b846109e2856040518060600160405280602581526020016132f36025913960046000611350611e32565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611fff565b600061094261138e611e32565b8484611eea565b6012546001600160a01b031633146113bf5760405162461bcd60e51b8152600401610a3390612cf4565b601980546001600160a01b0319166001600160a01b0383161790556040517f200c92aaea275302bf641e37f7a5dda63f445f08f4fc74a5cde7fd643f609e0990610fbf908390612a57565b601f5481565b6103e381565b6025818154811061087157fe5b60185481565b601a546001600160a01b031681565b611440610f41565b1561145d5760405162461bcd60e51b8152600401610a3390612e34565b6008546301000000900460ff166114865760405162461bcd60e51b8152600401610a3390612e85565b600854610100900460ff16156114ae5760405162461bcd60e51b8152600401610a339061300c565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906114df903090600401612a57565b60206040518083038186803b1580156114f757600080fd5b505afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f919061299e565b600d54600b549192506001600160a01b039182169116148015906115535750600081115b1561160857600e54600b54611575916001600160a01b0391821691168361222a565b611608600e60009054906101000a90046001600160a01b031682601d5460258054806020026020016040519081016040528092919081815260200182805480156115e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115ca575b5050505050306116036102584261202b90919063ffffffff16565b6122d5565b600c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611639903090600401612a57565b60206040518083038186803b15801561165157600080fd5b505afa158015611665573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611689919061299e565b600d54600c549192506001600160a01b039182169116148015906116ad5750600081115b1561175b57600e54600c546116cf916001600160a01b0391821691168361222a565b61175b600e60009054906101000a90046001600160a01b031682601d5460268054806020026020016040519081016040528092919081815260200182805480156115e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116115ca575050505050306116036102584261202b90919063ffffffff16565b5050565b6000611769611e32565b6001600160a01b031661177a611269565b6001600160a01b0316146117a05760405162461bcd60e51b8152600401610a3390612f51565b600260015414156117c35760405162461bcd60e51b8152600401610a33906130f8565b60026001556117d28383611be1565b600180559392505050565b6126de81565b6023818154811061087157fe5b6012546001600160a01b0316331461181a5760405162461bcd60e51b8152600401610a3390612cf4565b6126de86101561183c5760405162461bcd60e51b8152600401610a3390612b90565b61271086111561185e5760405162461bcd60e51b8152600401610a3390612dfd565b601b8690556113888510156118855760405162461bcd60e51b8152600401610a3390612bfe565b6127108511156118a75760405162461bcd60e51b8152600401610a3390612bc7565b601c8590556113888411156118ce5760405162461bcd60e51b8152600401610a3390612eaa565b60168490556113888311156118f55760405162461bcd60e51b8152600401610a3390612f22565b60178390556103e382111561191c5760405162461bcd60e51b8152600401610a3390612d12565b601d82905560188190556040517fcb4ecc62ba7efb533c814d48b7dc1c8f06063d93bf32c3730c1ec47011e8747a90611960908890889088908890879089906131c4565b60405180910390a1505050505050565b6012546001600160a01b0316331461199a5760405162461bcd60e51b8152600401610a3390612cf4565b601280546001600160a01b0319166001600160a01b0383161790556040517f91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd5490610fbf908390612a57565b60026001541415611a085760405162461bcd60e51b8152600401610a33906130f8565b6002600155611a15610f41565b15610ba15760405162461bcd60e51b8152600401610a3390612e34565b6012546001600160a01b03163314611a5c5760405162461bcd60e51b8152600401610a3390612cf4565b610c27612410565b600c546001600160a01b031681565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6008546301000000900460ff1681565b600d546001600160a01b031681565b600a546001600160a01b031681565b611ad4611e32565b6001600160a01b0316611ae5611269565b6001600160a01b031614611b0b5760405162461bcd60e51b8152600401610a3390612f51565b61175b8282612484565b60095481565b61251c81565b611b29611e32565b6001600160a01b0316611b3a611269565b6001600160a01b031614611b605760405162461bcd60e51b8152600401610a3390612f51565b6001600160a01b038116611b865760405162461bcd60e51b8152600401610a3390612c35565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000611beb611e32565b6001600160a01b0316611bfc611269565b6001600160a01b031614611c225760405162461bcd60e51b8152600401610a3390612f51565b60026001541415611c455760405162461bcd60e51b8152600401610a33906130f8565b600260015581611c675760405162461bcd60e51b8152600401610a3390612e5e565b6000611c84601454610e566015548661214490919063ffffffff16565b9050601554811115611c9557506015545b601554611ca2908261211c565b601555601c546127101115611ccf57611ccc612710610e56601c548661214490919063ffffffff16565b92505b6008546301000000900460ff1615611cea57611cea83612481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611d1b903090600401612a57565b60206040518083038186803b158015611d3357600080fd5b505afa158015611d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6b919061299e565b905080841115611d79578093505b836014541015611d895760145493505b601454611d96908561211c565b601455601054600a54611db6916001600160a01b039182169116866121b0565b50600180559392505050565b6000611dcc611e32565b6001600160a01b0316611ddd611269565b6001600160a01b031614611e035760405162461bcd60e51b8152600401610a3390612f51565b6000611e20601454610e566015548661214490919063ffffffff16565b90506109eb8482612566565b601d5481565b3390565b6001600160a01b038316611e5c5760405162461bcd60e51b8152600401610a3390613033565b6001600160a01b038216611e825760405162461bcd60e51b8152600401610a3390612c7b565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611edd908590613166565b60405180910390a3505050565b6001600160a01b038316611f105760405162461bcd60e51b8152600401610a3390612fc7565b6001600160a01b038216611f365760405162461bcd60e51b8152600401610a3390612b00565b611f4183838361108f565b611f7e816040518060600160405280602681526020016132a5602691396001600160a01b0386166000908152600360205260409020549190611fff565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611fad908261202b565b6001600160a01b0380841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611edd908590613166565b600081848411156120235760405162461bcd60e51b8152600401610a339190612acd565b505050900390565b6000828201838110156109eb5760405162461bcd60e51b8152600401610a3390612cbd565b612058610f41565b6120745760405162461bcd60e51b8152600401610a3390612b62565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120a7611e32565b6040516120b49190612a57565b60405180910390a1565b612116846323b872dd60e01b8585856040516024016120df93929190612a85565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261261a565b50505050565b60008282111561213e5760405162461bcd60e51b8152600401610a3390612d49565b50900390565b60008261215357506000610946565b8282028284828161216057fe5b04146109eb5760405162461bcd60e51b8152600401610a3390612ee1565b600080821161219f5760405162461bcd60e51b8152600401610a3390612dc6565b8183816121a857fe5b049392505050565b61108f8363a9059cbb60e01b84846040516024016120df929190612aa9565b6121d7610f41565b156121f45760405162461bcd60e51b8152600401610a3390612e34565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120a7611e32565b60006122b482856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040161225e929190612a6b565b60206040518083038186803b15801561227657600080fd5b505afa15801561228a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ae919061299e565b9061202b565b90506121168463095ea7b360e01b85846040516024016120df929190612aa9565b60405163d06ca61f60e01b81526060906001600160a01b0388169063d06ca61f90612306908990889060040161316f565b60006040518083038186803b15801561231e57600080fd5b505afa158015612332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261235a91908101906128d1565b90506000816123746001845161211c90919063ffffffff16565b8151811061237e57fe5b60200260200101519050876001600160a01b0316635c11d795886123b16103e8610e568b8761214490919063ffffffff16565b8888886040518663ffffffff1660e01b81526004016123d4959493929190613188565b600060405180830381600087803b1580156123ee57600080fd5b505af1158015612402573d6000803e3d6000fd5b505050505050505050505050565b47801561248157600f60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561246757600080fd5b505af115801561247b573d6000803e3d6000fd5b50505050505b50565b6001600160a01b0382166124aa5760405162461bcd60e51b8152600401610a3390612f86565b6124b68260008361108f565b6124f381604051806060016040528060228152602001613283602291396001600160a01b0385166000908152600360205260409020549190611fff565b6001600160a01b038316600090815260036020526040902055600554612519908261211c565b6005556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061255a908590613166565b60405180910390a35050565b6001600160a01b03821661258c5760405162461bcd60e51b8152600401610a339061312f565b6125986000838361108f565b6005546125a5908261202b565b6005556001600160a01b0382166000908152600360205260409020546125cb908261202b565b6001600160a01b0383166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061255a908590613166565b606061266f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126a99092919063ffffffff16565b80519091501561108f578080602001905181019061268d9190612966565b61108f5760405162461bcd60e51b8152600401610a33906130ae565b60606126b884846000856126c0565b949350505050565b6060824710156126e25760405162461bcd60e51b8152600401610a3390612d80565b6126eb85612781565b6127075760405162461bcd60e51b8152600401610a3390613077565b60006060866001600160a01b031685876040516127249190612a3b565b60006040518083038185875af1925050503d8060008114612761576040519150601f19603f3d011682016040523d82523d6000602084013e612766565b606091505b5091509150612776828286612787565b979650505050505050565b3b151590565b606083156127965750816109eb565b8251156127a65782518084602001fd5b8160405162461bcd60e51b8152600401610a339190612acd565b80356001600160a01b038116811461094657600080fd5b6000602082840312156127e8578081fd5b6109eb83836127c0565b60008060408385031215612804578081fd5b61280e84846127c0565b915061281d84602085016127c0565b90509250929050565b60008060006060848603121561283a578081fd5b83356128458161326d565b925060208401356128558161326d565b929592945050506040919091013590565b60008060408385031215612878578182fd5b61288284846127c0565b946020939093013593505050565b6000806000606084860312156128a4578283fd5b83356128af8161326d565b92506020840135915060408401356128c68161326d565b809150509250925092565b600060208083850312156128e3578182fd5b825167ffffffffffffffff8111156128f9578283fd5b8301601f81018513612909578283fd5b805161291c61291782613221565b6131fa565b8181528381019083850185840285018601891015612938578687fd5b8694505b8385101561295a57805183526001949094019391850191850161293c565b50979650505050505050565b600060208284031215612977578081fd5b815180151581146109eb578182fd5b600060208284031215612997578081fd5b5035919050565b6000602082840312156129af578081fd5b5051919050565b60008060008060008060c087890312156129ce578182fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000815180845260208085019450808401835b83811015612a305781516001600160a01b031687529582019590820190600101612a0b565b509495945050505050565b60008251612a4d818460208701613241565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152612aec816040850160208701613241565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b602080825260059082015264217361666560d81b604082015260600190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252601a908201527f5f656e7472616e6365466565466163746f7220746f6f206c6f77000000000000604082015260600190565b6020808252601b908201527f5f7769746864726177466565466163746f7220746f6f20686967680000000000604082015260600190565b6020808252601a908201527f5f7769746864726177466565466163746f7220746f6f206c6f77000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526004908201526310b3b7bb60e11b604082015260600190565b60208082526018908201527f5f736c697070616765466163746f7220746f6f20686967680000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f5f656e7472616e6365466565466163746f7220746f6f20686967680000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252600d908201526c05f77616e74416d74203c3d203609c1b604082015260600190565b6020808252600b908201526a02169734175746f436f6d760ac1b604082015260600190565b60208082526017908201527f5f636f6e74726f6c6c657246656520746f6f2068696768000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601590820152740bec4eaf284c2c6d6a4c2e8ca40e8dede40d0d2ced605b1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252600d908201526c697343414b455374616b696e6760981b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b6000838252604060208301526126b860408301846129f8565b600086825285602083015260a060408301526131a760a08301866129f8565b6001600160a01b0394909416606083015250608001529392505050565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561321957600080fd5b604052919050565b600067ffffffffffffffff821115613237578081fd5b5060209081020190565b60005b8381101561325c578181015183820152602001613244565b838111156121165750506000910152565b6001600160a01b038116811461248157600080fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203fcb2fbe15e2f74ed22c62f87f01406df9b2cb0c014b75f350bbbe0a2f70667964736f6c634300060c00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104955760003560e01c8063846d9e1711610262578063c11c2e9211610151578063e5dd455a116100ce578063f106845411610092578063f106845414610813578063f2dc46481461081b578063f2fde38b14610823578063f3fef3a314610836578063f6bd477414610849578063ffbd3b1f1461085c57610495565b8063e5dd455a146107e8578063e7198474146107f0578063e7a03679146107f8578063e9e443df14610800578063ee50dc341461052557610495565b8063cfad57a211610115578063cfad57a2146107aa578063d389800f146107bd578063d5b09163146107c5578063d7cb416f146107cd578063dd62ed3e146107d557610495565b8063c11c2e9214610761578063c19cbd4814610769578063c302a4d01461077c578063c8e3d18b14610784578063cc917f4e1461079757610495565b80639fc33a9f116101df578063b3545c01116101a3578063b3545c01146104c3578063b74cd24214610736578063b77050e71461073e578063bd5f119514610751578063c0973eed1461075957610495565b80639fc33a9f146106ed578063a457c2d7146106f5578063a9059cbb14610708578063ad740f8c1461071b578063ae7d7d811461072e57610495565b80639331aace116102265780639331aace146106af57806395d89b41146106b757806396e9aff8146106bf5780639a246643146106d25780639bc289f1146106da57610495565b8063846d9e171461068457806385f02dd61461068c578063866b2018146104c35780638906758d146106945780638da5cb5b146106a757610495565b806346008a071161038957806367057b6c11610306578063715018a6116102ca578063715018a61461065457806377c7b8fc1461065c578063783478ad146106645780637ff36fbe1461066c57806383fa0ef9146106745780638456cb591461067c57610495565b806367057b6c1461052557806367206d401461061e57806368f5416214610631578063693a090b1461063957806370a082311461064157610495565b80635c975abb1161034d5780635c975abb146105e05780635da79d63146105e857806360662c42146105fb57806363fe3e3a1461060e578063655bee371461061657610495565b806346008a07146105b557806347e7ef24146105bd57806348a0d754146105d05780634d9f7bb2146105255780635bc27d4b146105d857610495565b806323b872dd1161041757806339509351116103db57806339509351146105825780633f4ba83a1461059557806342da4eb31461059d57806344a3955e146105a557806345c20fc2146105ad57610495565b806323b872dd1461053d5780632717eff3146105255780632f1ce2c514610550578063313ce5671461056357806336e9332d1461057857610495565b80630fa4e01e1161045e5780630fa4e01e146105155780631334903f1461051d5780631672d7b514610525578063178a8d071461052d57806318160ddd1461053557610495565b80627a2ae31461049a578063061c7d48146104c357806306fdde03146104d85780630772efb4146104ed578063095ea7b3146104f5575b600080fd5b6104ad6104a8366004612986565b610864565b6040516104ba9190612a57565b60405180910390f35b6104cb61088b565b6040516104ba9190613166565b6104e0610891565b6040516104ba9190612acd565b6104cb610928565b610508610503366004612866565b61092e565b6040516104ba9190612ac2565b6104cb61094c565b6104cb610952565b6104cb610958565b6104cb61095e565b6104cb610964565b61050861054b366004612826565b61096a565b6104cb61055e366004612866565b6109f2565b61056b610b68565b6040516104ba91906131ec565b610580610b71565b005b610508610590366004612866565b610ba7565b610580610bf5565b6104cb610c29565b6104cb610c2f565b610508610c35565b6104ad610c46565b6104cb6105cb366004612866565b610c55565b6104cb610eac565b6104ad610f32565b610508610f41565b6105806105f63660046127d7565b610f4a565b6104ad610609366004612986565b610fca565b6104ad610fd7565b6104ad610fe6565b61058061062c366004612890565b610ff5565b6104cb611094565b6104ad61109a565b6104cb61064f3660046127d7565b6110a9565b6105806110c4565b6104cb61114d565b6104ad61118a565b6104ad611199565b6104cb6111a8565b6105806111ae565b6105086111e0565b6104cb6111ee565b6105806106a23660046127d7565b6111f4565b6104ad611269565b6104cb611278565b6104e061127e565b6104ad6106cd366004612986565b6112df565b6105086112ec565b6104cb6106e83660046127d7565b6112fb565b6104ad611301565b610508610703366004612866565b611319565b610508610716366004612866565b611381565b6105806107293660046127d7565b611395565b6104cb61140a565b6104cb611410565b6104ad61074c366004612986565b611416565b6104cb611423565b6104ad611429565b610580611438565b6104cb610777366004612866565b61175f565b6104cb6117dd565b6104ad610792366004612986565b6117e3565b6105806107a53660046129b6565b6117f0565b6105806107b83660046127d7565b611970565b6105806119e5565b610580611a32565b6104ad611a64565b6104cb6107e33660046127f2565b611a73565b610508611a9e565b6104ad611aae565b6104ad611abd565b61058061080e366004612866565b611acc565b6104cb611b15565b6104cb611b1b565b6105806108313660046127d7565b611b21565b6104cb610844366004612866565b611be1565b6104cb610857366004612866565b611dc2565b6104cb611e2c565b6026818154811061087157fe5b6000918252602090912001546001600160a01b0316905081565b61138881565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505090505b90565b60205481565b600061094261093b611e32565b8484611e36565b5060015b92915050565b60135481565b601b5481565b61271081565b60175481565b60055490565b6000610977848484611eea565b6109e784610983611e32565b6109e2856040518060600160405280602881526020016132cb602891396001600160a01b038a166000908152600460205260408120906109c1611e32565b6001600160a01b031681526020810191909152604001600020549190611fff565b611e36565b5060015b9392505050565b60006109fc611e32565b6001600160a01b0316610a0d611269565b6001600160a01b031614610a3c5760405162461bcd60e51b8152600401610a3390612f51565b60405180910390fd5b6011546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a6d903090600401612a57565b60206040518083038186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd919061299e565b905080831115610acb578092505b60115460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610afd9087908790600401612aa9565b602060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190612966565b50602154610b5d908461202b565b602155509092915050565b60085460ff1690565b60026001541415610b945760405162461bcd60e51b8152600401610a33906130f8565b6002600155610ba1610c27565b60018055565b6000610942610bb4611e32565b846109e28560046000610bc5611e32565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061202b565b6012546001600160a01b03163314610c1f5760405162461bcd60e51b8152600401610a3390612cf4565b610c27612050565b565b60145481565b60155481565b600854640100000000900460ff1681565b6012546001600160a01b031681565b6000610c5f611e32565b6001600160a01b0316610c70611269565b6001600160a01b031614610c965760405162461bcd60e51b8152600401610a3390612f51565b60026001541415610cb95760405162461bcd60e51b8152600401610a33906130f8565b6002600155610cc6610f41565b15610ce35760405162461bcd60e51b8152600401610a3390612e34565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610d14903090600401612a57565b60206040518083038186803b158015610d2c57600080fd5b505afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d64919061299e565b600a54909150610d7f906001600160a01b03163330866120be565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610db0903090600401612a57565b60206040518083038186803b158015610dc857600080fd5b505afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e00919061299e565b9050610e0c818361211c565b601454909450849015801590610e2457506000601554115b15610e5f57610e5c612710610e56601454610e56601b54610e506015548c61214490919063ffffffff16565b90612144565b9061217e565b90505b601554610e6c908261202b565b6015556008546301000000900460ff1615610e8e57610e89610c27565b610e9f565b601454610e9b908661202b565b6014555b6001805595945050505050565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610edd903090600401612a57565b60206040518083038186803b158015610ef557600080fd5b505afa158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d919061299e565b905090565b6010546001600160a01b031681565b60025460ff1690565b6012546001600160a01b03163314610f745760405162461bcd60e51b8152600401610a3390612cf4565b600e80546001600160a01b0319166001600160a01b0383161790556040517f384f1dcb79da4071839c471d7c81884a43fb946a527f3661fdee5904adc8f65790610fbf908390612a57565b60405180910390a150565b6022818154811061087157fe5b600f546001600160a01b031681565b6011546001600160a01b031681565b6012546001600160a01b0316331461101f5760405162461bcd60e51b8152600401610a3390612cf4565b600d546001600160a01b038481169116141561104d5760405162461bcd60e51b8152600401610a3390612b43565b600a546001600160a01b038481169116141561107b5760405162461bcd60e51b8152600401610a3390612b43565b61108f6001600160a01b03841682846121b0565b505050565b601c5481565b600e546001600160a01b031681565b6001600160a01b031660009081526003602052604090205490565b6110cc611e32565b6001600160a01b03166110dd611269565b6001600160a01b0316146111035760405162461bcd60e51b8152600401610a3390612f51565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000611157610964565b61116a5750670de0b6b3a7640000610925565b610f2d611175610964565b601454610e5690670de0b6b3a7640000612144565b6019546001600160a01b031681565b600b546001600160a01b031681565b601e5481565b6012546001600160a01b031633146111d85760405162461bcd60e51b8152600401610a3390612cf4565b610c276121cf565b600854610100900460ff1681565b60165481565b6012546001600160a01b0316331461121e5760405162461bcd60e51b8152600401610a3390612cf4565b601a80546001600160a01b0319166001600160a01b0383161790556040517fa69f1931be99336e049905baa11d21ed44204d7686e46b4344404d80d47c298890610fbf908390612a57565b6000546001600160a01b031690565b60215481565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561091d5780601f106108f25761010080835404028352916020019161091d565b6024818154811061087157fe5b60085462010000900460ff1681565b50600090565b6008546501000000000090046001600160a01b031681565b6000610942611326611e32565b846109e2856040518060600160405280602581526020016132f36025913960046000611350611e32565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611fff565b600061094261138e611e32565b8484611eea565b6012546001600160a01b031633146113bf5760405162461bcd60e51b8152600401610a3390612cf4565b601980546001600160a01b0319166001600160a01b0383161790556040517f200c92aaea275302bf641e37f7a5dda63f445f08f4fc74a5cde7fd643f609e0990610fbf908390612a57565b601f5481565b6103e381565b6025818154811061087157fe5b60185481565b601a546001600160a01b031681565b611440610f41565b1561145d5760405162461bcd60e51b8152600401610a3390612e34565b6008546301000000900460ff166114865760405162461bcd60e51b8152600401610a3390612e85565b600854610100900460ff16156114ae5760405162461bcd60e51b8152600401610a339061300c565b600b546040516370a0823160e01b81526000916001600160a01b0316906370a08231906114df903090600401612a57565b60206040518083038186803b1580156114f757600080fd5b505afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f919061299e565b600d54600b549192506001600160a01b039182169116148015906115535750600081115b1561160857600e54600b54611575916001600160a01b0391821691168361222a565b611608600e60009054906101000a90046001600160a01b031682601d5460258054806020026020016040519081016040528092919081815260200182805480156115e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115ca575b5050505050306116036102584261202b90919063ffffffff16565b6122d5565b600c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611639903090600401612a57565b60206040518083038186803b15801561165157600080fd5b505afa158015611665573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611689919061299e565b600d54600c549192506001600160a01b039182169116148015906116ad5750600081115b1561175b57600e54600c546116cf916001600160a01b0391821691168361222a565b61175b600e60009054906101000a90046001600160a01b031682601d5460268054806020026020016040519081016040528092919081815260200182805480156115e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116115ca575050505050306116036102584261202b90919063ffffffff16565b5050565b6000611769611e32565b6001600160a01b031661177a611269565b6001600160a01b0316146117a05760405162461bcd60e51b8152600401610a3390612f51565b600260015414156117c35760405162461bcd60e51b8152600401610a33906130f8565b60026001556117d28383611be1565b600180559392505050565b6126de81565b6023818154811061087157fe5b6012546001600160a01b0316331461181a5760405162461bcd60e51b8152600401610a3390612cf4565b6126de86101561183c5760405162461bcd60e51b8152600401610a3390612b90565b61271086111561185e5760405162461bcd60e51b8152600401610a3390612dfd565b601b8690556113888510156118855760405162461bcd60e51b8152600401610a3390612bfe565b6127108511156118a75760405162461bcd60e51b8152600401610a3390612bc7565b601c8590556113888411156118ce5760405162461bcd60e51b8152600401610a3390612eaa565b60168490556113888311156118f55760405162461bcd60e51b8152600401610a3390612f22565b60178390556103e382111561191c5760405162461bcd60e51b8152600401610a3390612d12565b601d82905560188190556040517fcb4ecc62ba7efb533c814d48b7dc1c8f06063d93bf32c3730c1ec47011e8747a90611960908890889088908890879089906131c4565b60405180910390a1505050505050565b6012546001600160a01b0316331461199a5760405162461bcd60e51b8152600401610a3390612cf4565b601280546001600160a01b0319166001600160a01b0383161790556040517f91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd5490610fbf908390612a57565b60026001541415611a085760405162461bcd60e51b8152600401610a33906130f8565b6002600155611a15610f41565b15610ba15760405162461bcd60e51b8152600401610a3390612e34565b6012546001600160a01b03163314611a5c5760405162461bcd60e51b8152600401610a3390612cf4565b610c27612410565b600c546001600160a01b031681565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6008546301000000900460ff1681565b600d546001600160a01b031681565b600a546001600160a01b031681565b611ad4611e32565b6001600160a01b0316611ae5611269565b6001600160a01b031614611b0b5760405162461bcd60e51b8152600401610a3390612f51565b61175b8282612484565b60095481565b61251c81565b611b29611e32565b6001600160a01b0316611b3a611269565b6001600160a01b031614611b605760405162461bcd60e51b8152600401610a3390612f51565b6001600160a01b038116611b865760405162461bcd60e51b8152600401610a3390612c35565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000611beb611e32565b6001600160a01b0316611bfc611269565b6001600160a01b031614611c225760405162461bcd60e51b8152600401610a3390612f51565b60026001541415611c455760405162461bcd60e51b8152600401610a33906130f8565b600260015581611c675760405162461bcd60e51b8152600401610a3390612e5e565b6000611c84601454610e566015548661214490919063ffffffff16565b9050601554811115611c9557506015545b601554611ca2908261211c565b601555601c546127101115611ccf57611ccc612710610e56601c548661214490919063ffffffff16565b92505b6008546301000000900460ff1615611cea57611cea83612481565b600a546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611d1b903090600401612a57565b60206040518083038186803b158015611d3357600080fd5b505afa158015611d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6b919061299e565b905080841115611d79578093505b836014541015611d895760145493505b601454611d96908561211c565b601455601054600a54611db6916001600160a01b039182169116866121b0565b50600180559392505050565b6000611dcc611e32565b6001600160a01b0316611ddd611269565b6001600160a01b031614611e035760405162461bcd60e51b8152600401610a3390612f51565b6000611e20601454610e566015548661214490919063ffffffff16565b90506109eb8482612566565b601d5481565b3390565b6001600160a01b038316611e5c5760405162461bcd60e51b8152600401610a3390613033565b6001600160a01b038216611e825760405162461bcd60e51b8152600401610a3390612c7b565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611edd908590613166565b60405180910390a3505050565b6001600160a01b038316611f105760405162461bcd60e51b8152600401610a3390612fc7565b6001600160a01b038216611f365760405162461bcd60e51b8152600401610a3390612b00565b611f4183838361108f565b611f7e816040518060600160405280602681526020016132a5602691396001600160a01b0386166000908152600360205260409020549190611fff565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611fad908261202b565b6001600160a01b0380841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611edd908590613166565b600081848411156120235760405162461bcd60e51b8152600401610a339190612acd565b505050900390565b6000828201838110156109eb5760405162461bcd60e51b8152600401610a3390612cbd565b612058610f41565b6120745760405162461bcd60e51b8152600401610a3390612b62565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120a7611e32565b6040516120b49190612a57565b60405180910390a1565b612116846323b872dd60e01b8585856040516024016120df93929190612a85565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261261a565b50505050565b60008282111561213e5760405162461bcd60e51b8152600401610a3390612d49565b50900390565b60008261215357506000610946565b8282028284828161216057fe5b04146109eb5760405162461bcd60e51b8152600401610a3390612ee1565b600080821161219f5760405162461bcd60e51b8152600401610a3390612dc6565b8183816121a857fe5b049392505050565b61108f8363a9059cbb60e01b84846040516024016120df929190612aa9565b6121d7610f41565b156121f45760405162461bcd60e51b8152600401610a3390612e34565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120a7611e32565b60006122b482856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040161225e929190612a6b565b60206040518083038186803b15801561227657600080fd5b505afa15801561228a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ae919061299e565b9061202b565b90506121168463095ea7b360e01b85846040516024016120df929190612aa9565b60405163d06ca61f60e01b81526060906001600160a01b0388169063d06ca61f90612306908990889060040161316f565b60006040518083038186803b15801561231e57600080fd5b505afa158015612332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261235a91908101906128d1565b90506000816123746001845161211c90919063ffffffff16565b8151811061237e57fe5b60200260200101519050876001600160a01b0316635c11d795886123b16103e8610e568b8761214490919063ffffffff16565b8888886040518663ffffffff1660e01b81526004016123d4959493929190613188565b600060405180830381600087803b1580156123ee57600080fd5b505af1158015612402573d6000803e3d6000fd5b505050505050505050505050565b47801561248157600f60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561246757600080fd5b505af115801561247b573d6000803e3d6000fd5b50505050505b50565b6001600160a01b0382166124aa5760405162461bcd60e51b8152600401610a3390612f86565b6124b68260008361108f565b6124f381604051806060016040528060228152602001613283602291396001600160a01b0385166000908152600360205260409020549190611fff565b6001600160a01b038316600090815260036020526040902055600554612519908261211c565b6005556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061255a908590613166565b60405180910390a35050565b6001600160a01b03821661258c5760405162461bcd60e51b8152600401610a339061312f565b6125986000838361108f565b6005546125a5908261202b565b6005556001600160a01b0382166000908152600360205260409020546125cb908261202b565b6001600160a01b0383166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061255a908590613166565b606061266f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126a99092919063ffffffff16565b80519091501561108f578080602001905181019061268d9190612966565b61108f5760405162461bcd60e51b8152600401610a33906130ae565b60606126b884846000856126c0565b949350505050565b6060824710156126e25760405162461bcd60e51b8152600401610a3390612d80565b6126eb85612781565b6127075760405162461bcd60e51b8152600401610a3390613077565b60006060866001600160a01b031685876040516127249190612a3b565b60006040518083038185875af1925050503d8060008114612761576040519150601f19603f3d011682016040523d82523d6000602084013e612766565b606091505b5091509150612776828286612787565b979650505050505050565b3b151590565b606083156127965750816109eb565b8251156127a65782518084602001fd5b8160405162461bcd60e51b8152600401610a339190612acd565b80356001600160a01b038116811461094657600080fd5b6000602082840312156127e8578081fd5b6109eb83836127c0565b60008060408385031215612804578081fd5b61280e84846127c0565b915061281d84602085016127c0565b90509250929050565b60008060006060848603121561283a578081fd5b83356128458161326d565b925060208401356128558161326d565b929592945050506040919091013590565b60008060408385031215612878578182fd5b61288284846127c0565b946020939093013593505050565b6000806000606084860312156128a4578283fd5b83356128af8161326d565b92506020840135915060408401356128c68161326d565b809150509250925092565b600060208083850312156128e3578182fd5b825167ffffffffffffffff8111156128f9578283fd5b8301601f81018513612909578283fd5b805161291c61291782613221565b6131fa565b8181528381019083850185840285018601891015612938578687fd5b8694505b8385101561295a57805183526001949094019391850191850161293c565b50979650505050505050565b600060208284031215612977578081fd5b815180151581146109eb578182fd5b600060208284031215612997578081fd5b5035919050565b6000602082840312156129af578081fd5b5051919050565b60008060008060008060c087890312156129ce578182fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000815180845260208085019450808401835b83811015612a305781516001600160a01b031687529582019590820190600101612a0b565b509495945050505050565b60008251612a4d818460208701613241565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152612aec816040850160208701613241565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b602080825260059082015264217361666560d81b604082015260600190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252601a908201527f5f656e7472616e6365466565466163746f7220746f6f206c6f77000000000000604082015260600190565b6020808252601b908201527f5f7769746864726177466565466163746f7220746f6f20686967680000000000604082015260600190565b6020808252601a908201527f5f7769746864726177466565466163746f7220746f6f206c6f77000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526004908201526310b3b7bb60e11b604082015260600190565b60208082526018908201527f5f736c697070616765466163746f7220746f6f20686967680000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f5f656e7472616e6365466565466163746f7220746f6f20686967680000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252600d908201526c05f77616e74416d74203c3d203609c1b604082015260600190565b6020808252600b908201526a02169734175746f436f6d760ac1b604082015260600190565b60208082526017908201527f5f636f6e74726f6c6c657246656520746f6f2068696768000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601590820152740bec4eaf284c2c6d6a4c2e8ca40e8dede40d0d2ced605b1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252600d908201526c697343414b455374616b696e6760981b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b6000838252604060208301526126b860408301846129f8565b600086825285602083015260a060408301526131a760a08301866129f8565b6001600160a01b0394909416606083015250608001529392505050565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561321957600080fd5b604052919050565b600067ffffffffffffffff821115613237578081fd5b5060209081020190565b60005b8381101561325c578181015183820152602001613244565b838111156121165750506000910152565b6001600160a01b038116811461248157600080fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203fcb2fbe15e2f74ed22c62f87f01406df9b2cb0c014b75f350bbbe0a2f70667964736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "114:1604:75:-:0;;;1644:1:72;1613:32;;;;1651:34;;;;1691:30;;;;1759:4;1728:35;;;;1902:33;;2136:4;2104:36;;2273:74;;;-1:-1:-1;;;;;;2273:74:72;2305:42;2273:74;;;2424:4;2389:39;;2705:5;2670:40;;2876:3;2844:35;;2971:38;;;;3015:34;;;;3055:30;;;;3091:39;;155:1390:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;418:9;;429:11;;;;418:9;904:12:1;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:1;-1:-1:-1;;;;;926:18:1;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:1;-1:-1:-1;;;;;;;;;;;959:43:1;926:6;;959:43;-1:-1:-1;1645:1:10;1760:22;;935:7:9;:15;;-1:-1:-1;;935:15:9;;;2032:13:3;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2055:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:3;:14;;-1:-1:-1;;2082:14:3;2094:2;2082:14;;;-1:-1:-1;466:13:75;;:10;;2082:9:3;;466:13:75::1;;;;;;;;;;452:11;;:27;;;;;-1:-1:-1::0;;;;;452:27:75::1;;;;;-1:-1:-1::0;;;;;452:27:75::1;;;;;;502:10;513:1;502:13;;;;;;;;;;;;;;489:10;;:26;;;;;-1:-1:-1::0;;;;;489:26:75::1;;;;;-1:-1:-1::0;;;;;489:26:75::1;;;;;;543:10;554:1;543:13;;;;;;;;;;;;;;525:15;;:31;;;;;-1:-1:-1::0;;;;;525:31:75::1;;;;;-1:-1:-1::0;;;;;525:31:75::1;;;;;;580:10;591:1;580:13;;;;;;;;;;;;;;566:11;;:27;;;;;-1:-1:-1::0;;;;;566:27:75::1;;;;;-1:-1:-1::0;;;;;566:27:75::1;;;;;;618:10;629:1;618:13;;;;;;;;;;;;;;604:11;;:27;;;;;-1:-1:-1::0;;;;;604:27:75::1;;;;;-1:-1:-1::0;;;;;604:27:75::1;;;;;;657:10;668:1;657:13;;;;;;;;;;;;;;641;;:29;;;;;-1:-1:-1::0;;;;;641:29:75::1;;;;;-1:-1:-1::0;;;;;641:29:75::1;;;;;;696:10;707:1;696:13;;;;;;;;;;;;;;680;;:29;;;;;-1:-1:-1::0;;;;;680:29:75::1;;;;;-1:-1:-1::0;;;;;680:29:75::1;;;;;;735:10;746:1;735:13;;;;;;;;;;;;;;719;;:29;;;;;-1:-1:-1::0;;;;;719:29:75::1;;;;;-1:-1:-1::0;;;;;719:29:75::1;;;;;;781:10;792:1;781:13;;;;;;;;;::::0;;::::1;::::0;;;;;;759:19:::1;:35:::0;;804:3:::1;:10:::0;;;-1:-1:-1;;;;;;;;759:35:75;;::::1;::::0;-1:-1:-1;;;;;759:35:75;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;824:30:75::1;759:35;824:30:::0;::::1;;;;-1:-1:-1::0;;864:40:75::1;::::0;;::::1;;;;-1:-1:-1::0;;914:18:75::1;::::0;;962:13;;;;804:3;962:13;::::1;;;;;;::::0;;::::1;::::0;;;;;;;943:16:::1;:32:::0;;-1:-1:-1;;;;;;943:32:75::1;-1:-1:-1::0;;;;;943:32:75;;::::1;::::0;;;::::1;::::0;;1004;;985:51;;::::1;::::0;:16:::1;::::0;:51:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1067:34:75::1;::::0;;::::1;::::0;1046:55;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1132:34:75::1;::::0;::::1;::::0;1111:55;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1197:34:75::1;::::0;::::1;::::0;1176:55;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1262:34:75::1;::::0;::::1;::::0;1241:55;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1323:19:75;;1307:13:::1;:35:::0;1369:14;;:10;;1380:2:::1;::::0;1369:14;::::1;;;;;;;;;;;1352;;:31;;;;;-1:-1:-1::0;;;;;1352:31:75::1;;;;;-1:-1:-1::0;;;;;1352:31:75::1;;;;;;1407:5;:17;;;1393:11;:31;;;;1451:10;1462:2;1451:14;;;;;;;;;::::0;;::::1;::::0;;;;;;1434::::1;:31:::0;;-1:-1:-1;;;;;;1434:31:75::1;-1:-1:-1::0;;;;;1434:31:75;;::::1;;::::0;;-1:-1:-1;1475:14:75::1;:18:::0;1522:15:::1;::::0;1504:34:::1;::::0;1522:15:::1;1504:17;:34::i;:::-;155:1390:::0;;;;;;;114:1604;;598:104:7;685:10;598:104;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;:::i;:::-;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2179:38:1;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;1085:85::-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;114:1604:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:1604:75;;;-1:-1:-1;114:1604:75;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;114:1604:75;-1:-1:-1;;;;;114:1604:75;;;;;;;;;;;-1:-1:-1;114:1604:75;;;;;;;-1:-1:-1;114:1604:75;;;-1:-1:-1;114:1604:75;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;114:1604:75;;;;;;;164:722:-1;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;334:13;;-1:-1;;;;;8350:30;;8347:2;;;-1:-1;;8383:12;8347:2;8428:4;;8420:6;8416:17;362:80;8428:4;8416:17;8481:15;362:80;:::i;:::-;470:21;;;353:89;-1:-1;527:14;;;502:17;;;607:27;;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;669:10;;678:1;663:217;688:6;685:1;682:13;663:217;;;83:13;;-1:-1;;;;;9266:54;;9747:35;;9737:2;;678:1;;9786:12;9737:2;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;;252:634;;;;:::o;894:128::-;969:13;;9178;;9171:21;9868:32;;9858:2;;9914:1;;9904:12;9858:2;954:68;;;;:::o;1030:444::-;;1143:3;1136:4;1128:6;1124:17;1120:27;1110:2;;-1:-1;;1151:12;1110:2;1185:13;;-1:-1;;;;;8646:30;;8643:2;;;-1:-1;;8679:12;8643:2;8820:4;1213:65;8752:9;8733:17;;-1:-1;;8729:33;8810:15;;1213:65;:::i;:::-;1204:74;;1298:6;1291:5;1284:21;1402:3;8820:4;1393:6;1326;1384:16;;1381:25;1378:2;;;1419:1;;1409:12;1378:2;9477:1;9484:101;9498:6;9495:1;9492:13;9484:101;;;9565:11;;;;;9559:18;9546:11;;;;;9539:39;9513:10;;9484:101;;;9600:6;9597:1;9594:13;9591:2;;;9477:1;8820:4;9656:6;1360:5;9647:16;;9640:27;9591:2;;;;1103:371;;;;:::o;1516:1562::-;;1649:4;1637:9;1632:3;1628:19;1624:30;1621:2;;;-1:-1;;1657:12;1621:2;1685:20;1649:4;1685:20;:::i;:::-;1767:24;;1676:29;;-1:-1;;;;;;1800:30;;;1797:2;;;1788:1;;1833:12;1797:2;1878:85;1959:3;1950:6;1939:9;1935:22;1878:85;:::i;:::-;1860:16;1853:111;2060:2;2049:9;2045:18;2039:25;2025:39;;1811:18;2076:6;2073:30;2070:2;;;1788:1;;2106:12;2070:2;2151:85;2232:3;2223:6;2212:9;2208:22;2151:85;:::i;:::-;2060:2;2137:5;2133:16;2126:111;2333:2;2322:9;2318:18;2312:25;2298:39;;1811:18;2349:6;2346:30;2343:2;;;1788:1;;2379:12;2343:2;2424:85;2505:3;2496:6;2485:9;2481:22;2424:85;:::i;:::-;2333:2;2410:5;2406:16;2399:111;2606:2;2595:9;2591:18;2585:25;2571:39;;1811:18;2622:6;2619:30;2616:2;;;1788:1;;2652:12;2616:2;2697:85;2778:3;2769:6;2758:9;2754:22;2697:85;:::i;:::-;2606:2;2683:5;2679:16;2672:111;2879:3;2868:9;2864:19;2858:26;2844:40;;1811:18;2896:6;2893:30;2890:2;;;1788:1;;2926:12;2890:2;;2971:85;3052:3;3043:6;3032:9;3028:22;2971:85;:::i;:::-;2879:3;2957:5;2953:16;2946:111;;1615:1463;;;;:::o;3833:843::-;;3961:4;3949:9;3944:3;3940:19;3936:30;3933:2;;;-1:-1;;3969:12;3933:2;3997:20;3961:4;3997:20;:::i;:::-;3988:29;;4140:22;4761:13;4090:16;4083:86;4237:2;4306:9;4302:22;4761:13;4237:2;4256:5;4252:16;4245:86;4399:2;4468:9;4464:22;4761:13;4399:2;4418:5;4414:16;4407:86;4561:2;4630:9;4626:22;4761:13;4561:2;4580:5;4576:16;4569:86;3927:749;;;;:::o;4824:1537::-;;;;;;;;5149:3;5137:9;5128:7;5124:23;5120:33;5117:2;;;-1:-1;;5156:12;5117:2;5201:24;;-1:-1;;;;;5234:30;;;5231:2;;;-1:-1;;5267:12;5231:2;5357:22;;;;3242:4;3221:19;;;3217:30;3214:2;;;-1:-1;;3250:12;3214:2;3278:20;3242:4;3278:20;:::i;:::-;3354:17;3348:24;5245:18;3384:6;3381:30;3378:2;;;-1:-1;;3414:12;3378:2;3459:70;3525:3;3516:6;3505:9;3501:22;3459:70;:::i;:::-;3441:16;3434:96;;3614:2;3603:9;3599:18;3593:25;5245:18;3630:6;3627:30;3624:2;;;-1:-1;;3660:12;3624:2;3705:70;3771:3;3762:6;3751:9;3747:22;3705:70;:::i;:::-;3614:2;3691:5;3687:16;3680:96;;5287:102;;;;3614:2;5436:9;5432:18;5426:25;5412:39;;5245:18;5463:6;5460:30;5457:2;;;-1:-1;;5493:12;5457:2;5523:97;5612:7;5603:6;5592:9;5588:22;5523:97;:::i;:::-;5513:107;;5675:92;5759:7;3242:4;5739:9;5735:22;5675:92;:::i;:::-;5665:102;;5825:3;5814:9;5810:19;5804:26;5790:40;;5245:18;5842:6;5839:30;5836:2;;;-1:-1;;5872:12;5836:2;;5902:89;5983:7;5974:6;5963:9;5959:22;5902:89;:::i;:::-;5892:99;;;6028:3;6083:9;6079:22;4761:13;6037:74;;6167:61;6220:7;6148:3;6200:9;6196:22;6167:61;:::i;:::-;6157:71;;6284:61;6337:7;6265:3;6317:9;6313:22;6284:61;:::i;:::-;6274:71;;5111:1250;;;;;;;;;;:::o;7093:416::-;7293:2;7307:47;;;6593:2;7278:18;;;8946:19;6629:34;8986:14;;;6609:55;-1:-1;;;6684:12;;;6677:30;6726:12;;;7264:245::o;7516:416::-;7716:2;7730:47;;;7701:18;;;8946:19;7013:34;8986:14;;;6993:55;7067:12;;;7687:245::o;7939:256::-;8001:2;7995:9;8027:17;;;-1:-1;;;;;8087:34;;8123:22;;;8084:62;8081:2;;;8159:1;;8149:12;8081:2;8001;8168:22;7979:216;;-1:-1;7979:216::o;:::-;114:1604:75;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1842:46;;;:::i;:::-;;;;;;;:::i;2168:89:3:-;;;:::i;:::-;;;;;;;:::i;3055:30:72:-;;;:::i;4244:166:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1613:32:72:-;;;:::i;2389:39::-;;;:::i;2153:49::-;;;:::i;1902:33::-;;;:::i;3235:106:3:-;;;:::i;4877:317::-;;;;;;:::i;:::-;;:::i;8224:409:72:-;;;;;;:::i;:::-;;:::i;3086:89:3:-;;;:::i;:::-;;;;;;;:::i;5722:68:72:-;;;:::i;:::-;;5589:215:3;;;;;;:::i;:::-;;:::i;15629:74:72:-;;;:::i;1651:34::-;;;:::i;1691:30::-;;;:::i;1083:28::-;;;:::i;1560:25::-;;;:::i;4680:1036::-;;;;;;:::i;:::-;;:::i;4311:119::-;;;:::i;1492:30::-;;;:::i;1052:84:9:-;;;:::i;17352:218:72:-;;;;;;:::i;:::-;;:::i;3137:33::-;;;;;;:::i;:::-;;:::i;1460:26::-;;;:::i;1528:::-;;;:::i;18000:292::-;;;;;;:::i;:::-;;:::i;2670:40::-;;;:::i;1394:31::-;;;:::i;3399:125:3:-;;;;;;:::i;:::-;;:::i;1717:145:1:-;;;:::i;4436:199:72:-;;;:::i;2273:74::-;;;:::i;1292:28::-;;;:::i;2971:38::-;;;:::i;15553:70::-;;;:::i;847:25::-;;;:::i;1728:35::-;;;:::i;17788:206::-;;;;;;:::i;:::-;;:::i;1085:85:1:-;;;:::i;3091:39:72:-;;;:::i;2370:93:3:-;;;:::i;3217:35:72:-;;;;;;:::i;:::-;;:::i;953:30::-;;;:::i;5796:144::-;;;;;;:::i;:::-;;:::i;1118:34::-;;;:::i;6291:266:3:-;;;;;;:::i;:::-;;:::i;3727:172::-;;;;;;:::i;:::-;;:::i;17576:206:72:-;;;;;;:::i;:::-;;:::i;3015:34::-;;;:::i;2918:46::-;;;:::i;3258:35::-;;;;;;:::i;:::-;;:::i;2104:36::-;;;:::i;2353:29::-;;;:::i;14022:1525::-;;;:::i;6903:219::-;;;;;;:::i;:::-;;:::i;2555:50::-;;;:::i;3176:35::-;;;;;;:::i;:::-;;:::i;15709:1491::-;;;;;;:::i;:::-;;:::i;17206:140::-;;;;;;:::i;:::-;;:::i;1655:61:75:-;;;:::i;18527:74:72:-;;;:::i;1326:28::-;;;:::i;3957:149:3:-;;;;;;:::i;:::-;;:::i;989:22:72:-;;;:::i;1360:28::-;;;:::i;1260:26::-;;;:::i;9982:130::-;;;;;;:::i;:::-;;:::i;1198:18::-;;;:::i;2216:43::-;;;:::i;2011:240:1:-;;;;;;:::i;:::-;;:::i;7128:1090:72:-;;;;;;:::i;:::-;;:::i;9687:289::-;;;;;;:::i;:::-;;:::i;2844:35::-;;;:::i;3299:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3299:35:72;;-1:-1:-1;3299:35:72;:::o;1842:46::-;1884:4;1842:46;:::o;2168:89:3:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;:::o;3055:30:72:-;;;;:::o;4244:166:3:-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:3;4244:166;;;;;:::o;1613:32:72:-;;;;:::o;2389:39::-;;;;:::o;2153:49::-;2197:5;2153:49;:::o;1902:33::-;;;;:::o;3235:106:3:-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:3;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:3;;;;;;;;;;;;-1:-1:-1;5076:33:3;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:3;4877:317;;;;;;:::o;8224:409:72:-;8320:7;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;;;;;;;;;8364:11:72::1;::::0;8357:44:::1;::::0;-1:-1:-1;;;8357:44:72;;8339:15:::1;::::0;-1:-1:-1;;;;;8364:11:72::1;::::0;8357:29:::1;::::0;:44:::1;::::0;8395:4:::1;::::0;8357:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8339:62;;8425:7;8415;:17;8411:65;;;8458:7;8448:17;;8411:65;8492:11;::::0;8485:51:::1;::::0;-1:-1:-1;;;8485:51:72;;-1:-1:-1;;;;;8492:11:72;;::::1;::::0;8485:28:::1;::::0;:51:::1;::::0;8514:12;;8528:7;;8485:51:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8569:20:72::1;::::0;:33:::1;::::0;8594:7;8569:24:::1;:33::i;:::-;8546:20;:56:::0;-1:-1:-1;8619:7:72;;8224:409;-1:-1:-1;;8224:409:72:o;3086:89:3:-;3159:9;;;;3086:89;:::o;5722:68:72:-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;5776:7:72::1;:5;:7::i;:::-;1645:1:10::0;2580:22;;5722:68:72:o;5589:215:3:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:3;;;:34;;;;;;;;;;;:38;:50::i;15629:74:72:-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;15686:10:::1;:8;:10::i;:::-;15629:74::o:0;1651:34::-;;;;:::o;1691:30::-;;;;:::o;1083:28::-;;;;;;;;;:::o;1560:25::-;;;-1:-1:-1;;;;;1560:25:72;;:::o;4680:1036::-;4846:7;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;1688:1:10::1;2277:7;;:19;;2269:63;;;;-1:-1:-1::0;;;2269:63:10::1;;;;;;;:::i;:::-;1688:1;2407:7;:18:::0;1366:8:9::2;:6;:8::i;:::-;1365:9;1357:38;;;;-1:-1:-1::0;;;1357:38:9::2;;;;;;;:::i;:::-;4897:11:72::3;::::0;4890:44:::3;::::0;-1:-1:-1;;;4890:44:72;;4869:18:::3;::::0;-1:-1:-1;;;;;4897:11:72::3;::::0;4890:29:::3;::::0;:44:::3;::::0;4928:4:::3;::::0;4890:44:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4951:11;::::0;4869:65;;-1:-1:-1;4944:128:72::3;::::0;-1:-1:-1;;;;;4951:11:72::3;5002:10;5035:4;5054:8:::0;4944:36:::3;:128::i;:::-;5111:11;::::0;5104:44:::3;::::0;-1:-1:-1;;;5104:44:72;;5082:19:::3;::::0;-1:-1:-1;;;;;5111:11:72::3;::::0;5104:29:::3;::::0;:44:::3;::::0;5142:4:::3;::::0;5104:44:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5082:66:::0;-1:-1:-1;5169:27:72::3;5082:66:::0;5185:10;5169:15:::3;:27::i;:::-;5251:15;::::0;5158:38;;-1:-1:-1;5158:38:72;;5251:19;;;;:38:::3;;;5288:1;5274:11;;:15;5251:38;5247:246;;;5319:163;2544:5;5319:120;5423:15;;5319:82;5383:17;;5319:42;5349:11;;5319:8;:29;;:42;;;;:::i;:::-;:63:::0;::::3;:82::i;:::-;:103:::0;::::3;:120::i;:163::-;5305:177;;5247:246;5516:11;::::0;:28:::3;::::0;5532:11;5516:15:::3;:28::i;:::-;5502:11;:42:::0;5559:10:::3;::::0;;;::::3;;;5555:126;;;5585:7;:5;:7::i;:::-;5555:126;;;5641:15;::::0;:29:::3;::::0;5661:8;5641:19:::3;:29::i;:::-;5623:15;:47:::0;5555:126:::3;1645:1:10::1;2580:22:::0;;5698:11:72;4680:1036;-1:-1:-1;;;;;4680:1036:72:o;4311:119::-;4386:11;;4379:44;;-1:-1:-1;;;4379:44:72;;4353:7;;-1:-1:-1;;;;;4386:11:72;;4379:29;;:44;;4417:4;;4379:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4372:51;;4311:119;:::o;1492:30::-;;;-1:-1:-1;;;;;1492:30:72;;:::o;1052:84:9:-;1122:7;;;;1052:84;:::o;17352:218:72:-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;17474:16:::1;:36:::0;;-1:-1:-1;;;;;;17474:36:72::1;-1:-1:-1::0;;;;;17474:36:72;::::1;;::::0;;17525:38:::1;::::0;::::1;::::0;::::1;::::0;17474:36;;17525:38:::1;:::i;:::-;;;;;;;;17352:218:::0;:::o;3137:33::-;;;;;;;;;;1460:26;;;-1:-1:-1;;;;;1460:26:72;;:::o;1528:::-;;;-1:-1:-1;;;;;1528:26:72;;:::o;18000:292::-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;18162:13:::1;::::0;-1:-1:-1;;;;;18152:23:72;;::::1;18162:13:::0;::::1;18152:23;;18144:41;;;;-1:-1:-1::0;;;18144:41:72::1;;;;;;;:::i;:::-;18213:11;::::0;-1:-1:-1;;;;;18203:21:72;;::::1;18213:11:::0;::::1;18203:21;;18195:39;;;;-1:-1:-1::0;;;18195:39:72::1;;;;;;;:::i;:::-;18244:41;-1:-1:-1::0;;;;;18244:27:72;::::1;18272:3:::0;18277:7;18244:27:::1;:41::i;:::-;18000:292:::0;;;:::o;2670:40::-;;;;:::o;1394:31::-;;;-1:-1:-1;;;;;1394:31:72;;:::o;3399:125:3:-;-1:-1:-1;;;;;3499:18:3;3473:7;3499:18;;;:9;:18;;;;;;;3399:125::o;1717:145:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:1;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:1::1;::::0;;1717:145::o;4436:199:72:-;4489:7;4512:13;:11;:13::i;:::-;4508:60;;-1:-1:-1;4553:4:72;4546:11;;4508:60;4584:44;4614:13;:11;:13::i;:::-;4584:15;;:25;;4604:4;4584:19;:25::i;2273:74::-;;;-1:-1:-1;;;;;2273:74:72;;:::o;1292:28::-;;;-1:-1:-1;;;;;1292:28:72;;:::o;2971:38::-;;;;:::o;15553:70::-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;15608:8:::1;:6;:8::i;847:25::-:0;;;;;;;;;:::o;1728:35::-;;;;:::o;17788:206::-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;17906:14:::1;:32:::0;;-1:-1:-1;;;;;;17906:32:72::1;-1:-1:-1::0;;;;;17906:32:72;::::1;;::::0;;17953:34:::1;::::0;::::1;::::0;::::1;::::0;17906:32;;17953:34:::1;:::i;1085:85:1:-:0;1131:7;1157:6;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;3091:39:72:-;;;;:::o;2370:93:3:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;3217:35:72;;;;;;;;;;953:30;;;;;;;;;:::o;5796:144::-;-1:-1:-1;5902:7:72;;5796:144::o;1118:34::-;;;;;;-1:-1:-1;;;;;1118:34:72;;:::o;6291:266:3:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:3;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;17576:206:72:-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;17694:14:::1;:32:::0;;-1:-1:-1;;;;;;17694:32:72::1;-1:-1:-1::0;;;;;17694:32:72;::::1;;::::0;;17741:34:::1;::::0;::::1;::::0;::::1;::::0;17694:32;;17741:34:::1;:::i;3015:::-:0;;;;:::o;2918:46::-;2961:3;2918:46;:::o;3258:35::-;;;;;;;;;;2104:36;;;;:::o;2353:29::-;;;-1:-1:-1;;;;;2353:29:72;;:::o;14022:1525::-;1366:8:9;:6;:8::i;:::-;1365:9;1357:38;;;;-1:-1:-1;;;1357:38:9;;;;;;;:::i;:::-;14100:10:72::1;::::0;;;::::1;;;14092:34;;;;-1:-1:-1::0;;;14092:34:72::1;;;;;;;:::i;:::-;14145:13;::::0;::::1;::::0;::::1;;;14144:14;14136:40;;;;-1:-1:-1::0;;;14136:40:72::1;;;;;;;:::i;:::-;14370:13;::::0;14363:46:::1;::::0;-1:-1:-1;;;14363:46:72;;14343:17:::1;::::0;-1:-1:-1;;;;;14370:13:72::1;::::0;14363:31:::1;::::0;:46:::1;::::0;14403:4:::1;::::0;14363:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14440:13;::::0;14423::::1;::::0;14343:66;;-1:-1:-1;;;;;;14423:13:72;;::::1;14440::::0;::::1;14423:30;::::0;::::1;::::0;:47:::1;;;14469:1;14457:9;:13;14423:47;14419:489;;;14547:16;::::0;14493:13:::1;::::0;14486:118:::1;::::0;-1:-1:-1;;;;;14493:13:72;;::::1;::::0;14547:16:::1;14581:9:::0;14486:43:::1;:118::i;:::-;14672:225;14699:16;;;;;;;;;-1:-1:-1::0;;;;;14699:16:72::1;14733:9;14760:14;;14792:18;14672:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;14672:225:72::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;14836:4;14859:24;14879:3;14859:15;:19;;:24;;;;:::i;:::-;14672:9;:225::i;:::-;15003:13;::::0;14996:46:::1;::::0;-1:-1:-1;;;14996:46:72;;14976:17:::1;::::0;-1:-1:-1;;;;;15003:13:72::1;::::0;14996:31:::1;::::0;:46:::1;::::0;15036:4:::1;::::0;14996:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15073:13;::::0;15056::::1;::::0;14976:66;;-1:-1:-1;;;;;;15056:13:72;;::::1;15073::::0;::::1;15056:30;::::0;::::1;::::0;:47:::1;;;15102:1;15090:9;:13;15056:47;15052:489;;;15180:16;::::0;15126:13:::1;::::0;15119:118:::1;::::0;-1:-1:-1;;;;;15126:13:72;;::::1;::::0;15180:16:::1;15214:9:::0;15119:43:::1;:118::i;:::-;15305:225;15332:16;;;;;;;;;-1:-1:-1::0;;;;;15332:16:72::1;15366:9;15393:14;;15425:18;15305:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;15305:225:72::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;15469:4;15492:24;15512:3;15492:15;:19;;:24;;;;:::i;15305:225::-;1405:1:9;;14022:1525:72:o:0;6903:219::-;7053:7;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;1688:1:10::1;2277:7;;:19;;2269:63;;;;-1:-1:-1::0;;;2269:63:10::1;;;;;;;:::i;:::-;1688:1;2407:7;:18:::0;7083:32:72::2;7092:12:::0;7106:8;7083::::2;:32::i;:::-;1645:1:10::1;2580:22:::0;;7076:39:72;6903:219;-1:-1:-1;;;6903:219:72:o;2555:50::-;2601:4;2555:50;:::o;3176:35::-;;;;;;;;;;15709:1491;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;2601:4:::1;15991:18;:41;;15970:114;;;;-1:-1:-1::0;;;15970:114:72::1;;;;;;;:::i;:::-;2544:5;16115:18;:42;;16094:116;;;;-1:-1:-1::0;;;16094:116:72::1;;;;;;;:::i;:::-;16220:17;:38:::0;;;2826:4:::1;16290:41:::0;::::1;;16269:114;;;;-1:-1:-1::0;;;16269:114:72::1;;;;;;;:::i;:::-;2769:5;16414:18;:42;;16393:116;;;;-1:-1:-1::0;;;16393:116:72::1;;;;;;;:::i;:::-;16519:17;:38:::0;;;1884:4:::1;16576:33:::0;::::1;;16568:69;;;;-1:-1:-1::0;;;16568:69:72::1;;;;;;;:::i;:::-;16647:13;:30:::0;;;2086:4:::1;16696:29:::0;::::1;;16688:63;;;;-1:-1:-1::0;;;16688:63:72::1;;;;;;;:::i;:::-;16761:11;:26:::0;;;2961:3:::1;16819:35:::0;::::1;;16798:106;;;;-1:-1:-1::0;;;16798:106:72::1;;;;;;;:::i;:::-;16914:14;:32:::0;;;16956:14:::1;:28:::0;;;17000:193:::1;::::0;::::1;::::0;::::1;::::0;17025:18;;17057;;17089:14;;17117:12;;16973:11;;16931:15;;17000:193:::1;:::i;:::-;;;;;;;;15709:1491:::0;;;;;;:::o;17206:140::-;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;17281:10:::1;:24:::0;;-1:-1:-1;;;;;;17281:24:72::1;-1:-1:-1::0;;;;;17281:24:72;::::1;;::::0;;17320:19:::1;::::0;::::1;::::0;::::1;::::0;17281:24;;17320:19:::1;:::i;1655:61:75:-:0;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;1366:8:9::1;:6;:8::i;:::-;1365:9;1357:38;;;;-1:-1:-1::0;;;1357:38:9::1;;;;;;;:::i;18527:74:72:-:0;4268:10;;-1:-1:-1;;;;;4268:10:72;4254;:24;4246:41;;;;-1:-1:-1;;;4246:41:72;;;;;;;:::i;:::-;18584:10:::1;:8;:10::i;1326:28::-:0;;;-1:-1:-1;;;;;1326:28:72;;:::o;3957:149:3:-;-1:-1:-1;;;;;4072:18:3;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;989:22:72:-;;;;;;;;;:::o;1360:28::-;;;-1:-1:-1;;;;;1360:28:72;;:::o;1260:26::-;;;-1:-1:-1;;;;;1260:26:72;;:::o;9982:130::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;10077:28:72::1;10083:12;10097:7;10077:5;:28::i;1198:18::-:0;;;;:::o;2216:43::-;2255:4;2216:43;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;:::i;:::-;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;7128:1090:72:-;7273:7;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;1688:1:10::1;2277:7;;:19;;2269:63;;;;-1:-1:-1::0;;;2269:63:10::1;;;;;;;:::i;:::-;1688:1;2407:7;:18:::0;7304:12:72;7296:38:::2;;;;-1:-1:-1::0;;;7296:38:72::2;;;;;;;:::i;:::-;7345:21;7369:46;7399:15;;7369:25;7382:11;;7369:8;:12;;:25;;;;:::i;:46::-;7345:70;;7445:11;;7429:13;:27;7425:85;;;-1:-1:-1::0;7488:11:72::2;::::0;7425:85:::2;7533:11;::::0;:30:::2;::::0;7549:13;7533:15:::2;:30::i;:::-;7519:11;:44:::0;7578:17:::2;::::0;2769:5:::2;-1:-1:-1::0;7574:169:72::2;;;7645:87;2769:5;7645:31;7658:17;;7645:8;:12;;:31;;;;:::i;:87::-;7634:98;;7574:169;7757:10;::::0;;;::::2;;;7753:58;;;7783:17;7791:8;7783:7;:17::i;:::-;7846:11;::::0;7839:44:::2;::::0;-1:-1:-1;;;7839:44:72;;7821:15:::2;::::0;-1:-1:-1;;;;;7846:11:72::2;::::0;7839:29:::2;::::0;:44:::2;::::0;7877:4:::2;::::0;7839:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7821:62;;7908:7;7897:8;:18;7893:67;;;7942:7;7931:18;;7893:67;7992:8;7974:15;;:26;7970:83;;;8027:15;;8016:26;;7970:83;8081:15;::::0;:29:::2;::::0;8101:8;8081:19:::2;:29::i;:::-;8063:15;:47:::0;8154:15:::2;::::0;8128:11:::2;::::0;8121:59:::2;::::0;-1:-1:-1;;;;;8128:11:72;;::::2;::::0;8154:15:::2;8171:8:::0;8121:32:::2;:59::i;:::-;-1:-1:-1::0;1645:1:10::1;2580:22:::0;;8198:13:72;7128:1090;-1:-1:-1;;;7128:1090:72:o;9687:289::-;9801:7;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;-1:-1:-1;;;1289:68:1;;;;;;;:::i;:::-;9820:23:72::1;9846:45;9875:15;;9846:24;9858:11;;9846:7;:11;;:24;;;;:::i;:45::-;9820:71;;9901:36;9907:12;9921:15;9901:5;:36::i;2844:35::-:0;;;;:::o;598:104:7:-;685:10;598:104;:::o;9355:340:3:-;-1:-1:-1;;;;;9456:19:3;;9448:68;;;;-1:-1:-1;;;9448:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;9534:21:3;;9526:68;;;;-1:-1:-1;;;9526:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;9605:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9656:32;;;;;9635:6;;9656:32;:::i;:::-;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:3;;7128:70;;;;-1:-1:-1;;;7128:70:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;7216:23:3;;7208:71;;;;-1:-1:-1;;;7208:71:3;;;;;;;:::i;:::-;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:3;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:3;;;;;;;:9;:17;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:3;;;;;;;:9;:20;;;;;;;:55;;;;7519:35;;;;;;;;;;7547:6;;7519:35;:::i;5432:163:2:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:2;;;;;;;;:::i;:::-;-1:-1:-1;;;5583:5:2;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:2;;;;;;;:::i;2064:117:9:-;1631:8;:6;:8::i;:::-;1623:41;;;;-1:-1:-1;;;1623:41:9;;;;;;;:::i;:::-;2122:7:::1;:15:::0;;-1:-1:-1;;2122:15:9::1;::::0;;2152:22:::1;2161:12;:10;:12::i;:::-;2152:22;;;;;;:::i;:::-;;;;;;;;2064:117::o:0;885:203:5:-;985:96;1005:5;1035:27;;;1064:4;1070:2;1074:5;1012:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1012:68:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:5;-1:-1:-1;;;;;;1012:68:5;;;;;;;;;;985:19;:96::i;:::-;885:203;;;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:2;;;;;;;:::i;:::-;-1:-1:-1;3279:5:2;;;3136:155::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:2;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:2;;;;;;;:::i;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:2;;;;;;;:::i;:::-;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:2:o;704:175:5:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;:::i;1817:115:9:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;-1:-1:-1;;;1357:38:9;;;;;;;:::i;:::-;1876:7:::1;:14:::0;;-1:-1:-1;;1876:14:9::1;1886:4;1876:14;::::0;;1905:20:::1;1912:12;:10;:12::i;1967:283:5:-:0;2063:20;2086:50;2130:5;2086;-1:-1:-1;;;;;2086:15:5;;2110:4;2117:7;2086:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;:50::i;:::-;2063:73;;2146:97;2166:5;2196:22;;;2220:7;2229:12;2173:69;;;;;;;;;:::i;18607:659:72:-;18873:67;;-1:-1:-1;;;18873:67:72;;18834:24;;-1:-1:-1;;;;;18873:49:72;;;;;:67;;18923:9;;18934:5;;18873:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18873:67:72;;;;;;;;;;;;:::i;:::-;18834:106;;18950:17;18970:7;18978:21;18997:1;18978:7;:14;:18;;:21;;;;:::i;:::-;18970:30;;;;;;;;;;;;;;18950:50;;19028:17;-1:-1:-1;;;;;19011:102:72;;19127:9;19150:40;19185:4;19150:30;19164:15;19150:9;:13;;:30;;;;:::i;:40::-;19204:5;19223:3;19240:9;19011:248;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18607:659;;;;;;;;:::o;18298:223::-;18385:21;18420:10;;18416:99;;18452:11;;;;;;;;;-1:-1:-1;;;;;18452:11:72;-1:-1:-1;;;;;18446:26:72;;18480:6;18446:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18416:99;18298:223;:::o;8522:410:3:-;-1:-1:-1;;;;;8605:21:3;;8597:67;;;;-1:-1:-1;;;8597:67:3;;;;;;;:::i;:::-;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:3;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:3;;;;;;:9;:18;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;8914:1;;-1:-1:-1;;;;;8888:37:3;;;;;;;8918:6;;8888:37;:::i;:::-;;;;;;;;8522:410;;:::o;7832:370::-;-1:-1:-1;;;;;7915:21:3;;7907:65;;;;-1:-1:-1;;;7907:65:3;;;;;;;:::i;:::-;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:3;;;;;;:9;:18;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:3;;;;;;:9;:18;;;;;;:51;;;;8158:37;;8092:18;;;8158:37;;;;8188:6;;8158:37;:::i;2967:751:5:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:5;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:5;3491:221;;3635:10;3624:30;;;;;;;;;;;;:::i;:::-;3616:85;;;;-1:-1:-1;;;3616:85:5;;;;;;;:::i;3581:193:6:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:6:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:6;;;;;;;:::i;:::-;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:6;;;;;;;:::i;:::-;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:6;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:6:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:6;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:6;;;;;;;;:::i;5:130:-1:-;72:20;;-1:-1;;;;;37758:54;;38811:35;;38801:2;;38860:1;;38850:12;1303:241;;1407:2;1395:9;1386:7;1382:23;1378:32;1375:2;;;-1:-1;;1413:12;1375:2;1475:53;1520:7;1496:22;1475:53;:::i;1551:366::-;;;1672:2;1660:9;1651:7;1647:23;1643:32;1640:2;;;-1:-1;;1678:12;1640:2;1740:53;1785:7;1761:22;1740:53;:::i;:::-;1730:63;;1848:53;1893:7;1830:2;1873:9;1869:22;1848:53;:::i;:::-;1838:63;;1634:283;;;;;:::o;1924:491::-;;;;2062:2;2050:9;2041:7;2037:23;2033:32;2030:2;;;-1:-1;;2068:12;2030:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2120:63;-1:-1;2220:2;2259:22;;72:20;97:33;72:20;97:33;:::i;:::-;2024:391;;2228:63;;-1:-1;;;2328:2;2367:22;;;;1092:20;;2024:391::o;2422:366::-;;;2543:2;2531:9;2522:7;2518:23;2514:32;2511:2;;;-1:-1;;2549:12;2511:2;2611:53;2656:7;2632:22;2611:53;:::i;:::-;2601:63;2701:2;2740:22;;;;1092:20;;-1:-1;;;2505:283::o;2795:491::-;;;;2933:2;2921:9;2912:7;2908:23;2904:32;2901:2;;;-1:-1;;2939:12;2901:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2991:63;-1:-1;3091:2;3130:22;;1092:20;;-1:-1;3199:2;3238:22;;72:20;97:33;72:20;97:33;:::i;:::-;3207:63;;;;2895:391;;;;;:::o;3293:392::-;;3433:2;;3421:9;3412:7;3408:23;3404:32;3401:2;;;-1:-1;;3439:12;3401:2;3490:17;3484:24;3528:18;3520:6;3517:30;3514:2;;;-1:-1;;3550:12;3514:2;3637:22;;281:4;269:17;;265:27;-1:-1;255:2;;-1:-1;;296:12;255:2;336:6;330:13;358:80;373:64;430:6;373:64;:::i;:::-;358:80;:::i;:::-;466:21;;;523:14;;;;498:17;;;612;;;603:27;;;;600:36;-1:-1;597:2;;;-1:-1;;639:12;597:2;-1:-1;665:10;;659:217;684:6;681:1;678:13;659:217;;;1240:13;;752:61;;706:1;699:9;;;;;827:14;;;;855;;659:217;;;-1:-1;3570:99;3395:290;-1:-1;;;;;;;3395:290::o;3692:257::-;;3804:2;3792:9;3783:7;3779:23;3775:32;3772:2;;;-1:-1;;3810:12;3772:2;971:6;965:13;38957:5;37670:13;37663:21;38935:5;38932:32;38922:2;;-1:-1;;38968:12;3956:241;;4060:2;4048:9;4039:7;4035:23;4031:32;4028:2;;;-1:-1;;4066:12;4028:2;-1:-1;1092:20;;4022:175;-1:-1;4022:175::o;4204:263::-;;4319:2;4307:9;4298:7;4294:23;4290:32;4287:2;;;-1:-1;;4325:12;4287:2;-1:-1;1240:13;;4281:186;-1:-1;4281:186::o;4474:869::-;;;;;;;4663:3;4651:9;4642:7;4638:23;4634:33;4631:2;;;-1:-1;;4670:12;4631:2;-1:-1;;1092:20;;;4822:2;4861:22;;1092:20;;-1:-1;4930:2;4969:22;;1092:20;;5038:2;5077:22;;1092:20;;-1:-1;5146:3;5186:22;;1092:20;;-1:-1;5255:3;5295:22;1092:20;;-1:-1;4625:718;-1:-1;4625:718::o;5942:690::-;;6135:5;36581:12;37125:6;37120:3;37113:19;37162:4;;37157:3;37153:14;6147:93;;37162:4;6311:5;36435:14;-1:-1;6350:260;6375:6;6372:1;6369:13;6350:260;;;6436:13;;-1:-1;;;;;37758:54;5742:37;;5504:14;;;;36968;;;;37769:42;6390:9;6350:260;;;-1:-1;6616:10;;6066:566;-1:-1;;;;;6066:566::o;18091:271::-;;6911:5;36581:12;7022:52;7067:6;7062:3;7055:4;7048:5;7044:16;7022:52;:::i;:::-;7086:16;;;;;18225:137;-1:-1;;18225:137::o;18369:222::-;-1:-1;;;;;37758:54;;;;5742:37;;18496:2;18481:18;;18467:124::o;18843:333::-;-1:-1;;;;;37758:54;;;5742:37;;37758:54;;19162:2;19147:18;;5742:37;18998:2;18983:18;;18969:207::o;19183:444::-;-1:-1;;;;;37758:54;;;5742:37;;37758:54;;;;19530:2;19515:18;;5742:37;19613:2;19598:18;;17928:37;;;;19366:2;19351:18;;19337:290::o;19634:333::-;-1:-1;;;;;37758:54;;;;5742:37;;19953:2;19938:18;;17928:37;19789:2;19774:18;;19760:207::o;19974:210::-;37670:13;;37663:21;6705:34;;20095:2;20080:18;;20066:118::o;20191:310::-;;20338:2;20359:17;20352:47;7259:5;36581:12;37125:6;20338:2;20327:9;20323:18;37113:19;7353:52;7398:6;37153:14;20327:9;37153:14;20338:2;7379:5;7375:16;7353:52;:::i;:::-;38731:7;38715:14;-1:-1;;38711:28;7417:39;;;;37153:14;7417:39;;20309:192;-1:-1;;20309:192::o;20508:416::-;20708:2;20722:47;;;7693:2;20693:18;;;37113:19;7729:34;37153:14;;;7709:55;-1:-1;;;7784:12;;;7777:27;7823:12;;;20679:245::o;20931:416::-;21131:2;21145:47;;;8074:1;21116:18;;;37113:19;-1:-1;;;37153:14;;;8089:28;8136:12;;;21102:245::o;21354:416::-;21554:2;21568:47;;;8387:2;21539:18;;;37113:19;-1:-1;;;37153:14;;;8403:43;8465:12;;;21525:245::o;21777:416::-;21977:2;21991:47;;;8716:2;21962:18;;;37113:19;8752:28;37153:14;;;8732:49;8800:12;;;21948:245::o;22200:416::-;22400:2;22414:47;;;9051:2;22385:18;;;37113:19;9087:29;37153:14;;;9067:50;9136:12;;;22371:245::o;22623:416::-;22823:2;22837:47;;;9387:2;22808:18;;;37113:19;9423:28;37153:14;;;9403:49;9471:12;;;22794:245::o;23046:416::-;23246:2;23260:47;;;9722:2;23231:18;;;37113:19;9758:34;37153:14;;;9738:55;-1:-1;;;9813:12;;;9806:30;9855:12;;;23217:245::o;23469:416::-;23669:2;23683:47;;;10106:2;23654:18;;;37113:19;10142:34;37153:14;;;10122:55;-1:-1;;;10197:12;;;10190:26;10235:12;;;23640:245::o;23892:416::-;24092:2;24106:47;;;10486:2;24077:18;;;37113:19;10522:29;37153:14;;;10502:50;10571:12;;;24063:245::o;24315:416::-;24515:2;24529:47;;;10822:1;24500:18;;;37113:19;-1:-1;;;37153:14;;;10837:27;10883:12;;;24486:245::o;24738:416::-;24938:2;24952:47;;;11134:2;24923:18;;;37113:19;11170:26;37153:14;;;11150:47;11216:12;;;24909:245::o;25161:416::-;25361:2;25375:47;;;11467:2;25346:18;;;37113:19;11503:32;37153:14;;;11483:53;11555:12;;;25332:245::o;25584:416::-;25784:2;25798:47;;;11806:2;25769:18;;;37113:19;11842:34;37153:14;;;11822:55;-1:-1;;;11897:12;;;11890:30;11939:12;;;25755:245::o;26007:416::-;26207:2;26221:47;;;12190:2;26192:18;;;37113:19;12226:28;37153:14;;;12206:49;12274:12;;;26178:245::o;26430:416::-;26630:2;26644:47;;;12525:2;26615:18;;;37113:19;12561:29;37153:14;;;12541:50;12610:12;;;26601:245::o;26853:416::-;27053:2;27067:47;;;12861:2;27038:18;;;37113:19;-1:-1;;;37153:14;;;12877:39;12935:12;;;27024:245::o;27276:416::-;27476:2;27490:47;;;13186:2;27461:18;;;37113:19;-1:-1;;;37153:14;;;13202:36;13257:12;;;27447:245::o;27699:416::-;27899:2;27913:47;;;13508:2;27884:18;;;37113:19;-1:-1;;;37153:14;;;13524:34;13577:12;;;27870:245::o;28122:416::-;28322:2;28336:47;;;13828:2;28307:18;;;37113:19;13864:25;37153:14;;;13844:46;13909:12;;;28293:245::o;28545:416::-;28745:2;28759:47;;;14160:2;28730:18;;;37113:19;14196:34;37153:14;;;14176:55;-1:-1;;;14251:12;;;14244:25;14288:12;;;28716:245::o;28968:416::-;29168:2;29182:47;;;14539:2;29153:18;;;37113:19;-1:-1;;;37153:14;;;14555:44;14618:12;;;29139:245::o;29391:416::-;29591:2;29605:47;;;29576:18;;;37113:19;14905:34;37153:14;;;14885:55;14959:12;;;29562:245::o;29814:416::-;30014:2;30028:47;;;15210:2;29999:18;;;37113:19;15246:34;37153:14;;;15226:55;-1:-1;;;15301:12;;;15294:25;15338:12;;;29985:245::o;30237:416::-;30437:2;30451:47;;;15589:2;30422:18;;;37113:19;15625:34;37153:14;;;15605:55;-1:-1;;;15680:12;;;15673:29;15721:12;;;30408:245::o;30660:416::-;30860:2;30874:47;;;15972:2;30845:18;;;37113:19;-1:-1;;;37153:14;;;15988:36;16043:12;;;30831:245::o;31083:416::-;31283:2;31297:47;;;16294:2;31268:18;;;37113:19;16330:34;37153:14;;;16310:55;-1:-1;;;16385:12;;;16378:28;16425:12;;;31254:245::o;31506:416::-;31706:2;31720:47;;;16676:2;31691:18;;;37113:19;16712:31;37153:14;;;16692:52;16763:12;;;31677:245::o;31929:416::-;32129:2;32143:47;;;17014:2;32114:18;;;37113:19;17050:34;37153:14;;;17030:55;-1:-1;;;17105:12;;;17098:34;17151:12;;;32100:245::o;32352:416::-;32552:2;32566:47;;;17402:2;32537:18;;;37113:19;17438:33;37153:14;;;17418:54;17491:12;;;32523:245::o;32775:416::-;32975:2;32989:47;;;17742:2;32960:18;;;37113:19;17778:33;37153:14;;;17758:54;17831:12;;;32946:245::o;33198:222::-;17928:37;;;33325:2;33310:18;;33296:124::o;33427:481::-;;17958:5;17935:3;17928:37;33632:2;33750;33739:9;33735:18;33728:48;33790:108;33632:2;33621:9;33617:18;33884:6;33790:108;:::i;33915:816::-;;17958:5;17935:3;17928:37;17958:5;34369:2;34358:9;34354:18;17928:37;34204:3;34406:2;34395:9;34391:18;34384:48;34446:108;34204:3;34193:9;34189:19;34540:6;34446:108;:::i;:::-;-1:-1;;;;;37758:54;;;;34633:2;34618:18;;5742:37;-1:-1;34716:3;34701:19;17928:37;34438:116;34175:556;-1:-1;;;34175:556::o;34738:780::-;17928:37;;;35170:2;35155:18;;17928:37;;;;35253:2;35238:18;;17928:37;;;;35336:2;35321:18;;17928:37;35419:3;35404:19;;17928:37;35503:3;35488:19;;17928:37;35005:3;34990:19;;34976:542::o;35525:214::-;37974:4;37963:16;;;;18044:35;;35648:2;35633:18;;35619:120::o;35746:256::-;35808:2;35802:9;35834:17;;;35909:18;35894:34;;35930:22;;;35891:62;35888:2;;;35966:1;;35956:12;35888:2;35808;35975:22;35786:216;;-1:-1;35786:216::o;36009:304::-;;36168:18;36160:6;36157:30;36154:2;;;-1:-1;;36190:12;36154:2;-1:-1;36235:4;36223:17;;;36288:15;;36091:222::o;38371:268::-;38436:1;38443:101;38457:6;38454:1;38451:13;38443:101;;;38524:11;;;38518:18;38505:11;;;38498:39;38479:2;38472:10;38443:101;;;38559:6;38556:1;38553:13;38550:2;;;-1:-1;;38436:1;38606:16;;38599:27;38420:219::o;38752:117::-;-1:-1;;;;;37758:54;;38811:35;;38801:2;;38860:1;;38850:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./Vault.sol\";\n\ncontract VaultStakingBeli is Vault {\n    constructor(\n        ErcConfig memory _erc,\n        ConversionPath memory _conversionPath,\n        FeeConfig memory _fees,\n        address[] memory _addresses,\n        uint256 _pid,\n        bool _isCAKEStaking,\n        bool _isSameAssetDeposit\n    ) public ERC20(_erc.name, _erc.symbol) {\n        wbnbAddress = _addresses[0];\n        govAddress = _addresses[1];\n        beliFarmAddress = _addresses[2];\n        BELIAddress = _addresses[3];\n\n        wantAddress = _addresses[4];\n        token0Address = _addresses[5];\n        token1Address = _addresses[6];\n        earnedAddress = _addresses[7];\n\n        farmContractAddress = _addresses[8];\n        pid = _pid;\n        isCAKEStaking = _isCAKEStaking;\n        isSameAssetDeposit = _isSameAssetDeposit;\n        isAutoComp = false;\n\n        uniRouterAddress = _addresses[9];\n        earnedToBELIPath = _conversionPath.earnedToBELIPath;\n        earnedToToken0Path = _conversionPath.earnedToToken0Path;\n        earnedToToken1Path = _conversionPath.earnedToToken1Path;\n        token0ToEarnedPath = _conversionPath.token0ToEarnedPath;\n        token1ToEarnedPath = _conversionPath.token1ToEarnedPath;\n\n        controllerFee = _fees.controllerFee;\n        rewardsAddress = _addresses[10];\n        buyBackRate = _fees.buyBackRate;\n        buyBackAddress = _addresses[11];\n        earnToBeliRate = 0;\n\n        transferOwnership(beliFarmAddress);\n    }\n\n    function _farm() internal override {}\n\n    function _unfarm(uint256 _wantAmt) internal override {}\n\n    function earn() public override nonReentrant whenNotPaused {}\n}",
  "sourcePath": "/workspaces/beli-farm/src/contracts/Vault_BELI.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Vault_BELI.sol",
    "exportedSymbols": {
      "VaultStakingBeli": [
        24844
      ]
    },
    "id": 24845,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24662,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:75"
      },
      {
        "id": 24663,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:75"
      },
      {
        "absolutePath": "project:/src/contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 24664,
        "nodeType": "ImportDirective",
        "scope": 24845,
        "sourceUnit": 23762,
        "src": "91:21:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24665,
              "name": "Vault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23761,
              "src": "143:5:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vault_$23761",
                "typeString": "contract Vault"
              }
            },
            "id": 24666,
            "nodeType": "InheritanceSpecifier",
            "src": "143:5:75"
          }
        ],
        "contractDependencies": [
          392,
          1250,
          1328,
          1860,
          2444,
          2484,
          23761
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 24844,
        "linearizedBaseContracts": [
          24844,
          23761,
          1250,
          1328,
          2444,
          2484,
          392,
          1860
        ],
        "name": "VaultStakingBeli",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24821,
              "nodeType": "Block",
              "src": "442:1103:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24690,
                      "name": "wbnbAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22243,
                      "src": "452:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24691,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "466:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24693,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 24692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "477:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "466:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "452:27:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24695,
                  "nodeType": "ExpressionStatement",
                  "src": "452:27:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24696,
                      "name": "govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22249,
                      "src": "489:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24697,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "502:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24699,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 24698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "513:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "502:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "489:26:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24701,
                  "nodeType": "ExpressionStatement",
                  "src": "489:26:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24702,
                      "name": "beliFarmAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22245,
                      "src": "525:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24703,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "543:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24705,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 24704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "554:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "543:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "525:31:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24707,
                  "nodeType": "ExpressionStatement",
                  "src": "525:31:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24708,
                      "name": "BELIAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22247,
                      "src": "566:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24709,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "580:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24711,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 24710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "591:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "580:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "566:27:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24713,
                  "nodeType": "ExpressionStatement",
                  "src": "566:27:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24714,
                      "name": "wantAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22233,
                      "src": "604:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24715,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "618:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24717,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 24716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "629:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "618:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "604:27:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24719,
                  "nodeType": "ExpressionStatement",
                  "src": "604:27:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24720,
                      "name": "token0Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22235,
                      "src": "641:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24721,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "657:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24723,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 24722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "657:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "641:29:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24725,
                  "nodeType": "ExpressionStatement",
                  "src": "641:29:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24726,
                      "name": "token1Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22237,
                      "src": "680:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24727,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "696:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24729,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "36",
                        "id": 24728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "696:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "680:29:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24731,
                  "nodeType": "ExpressionStatement",
                  "src": "680:29:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24732,
                      "name": "earnedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22239,
                      "src": "719:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24733,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "735:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24735,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "37",
                        "id": 24734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "746:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "735:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "719:29:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24737,
                  "nodeType": "ExpressionStatement",
                  "src": "719:29:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24738,
                      "name": "farmContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22229,
                      "src": "759:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24739,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "781:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24741,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "38",
                        "id": 24740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "781:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "759:35:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24743,
                  "nodeType": "ExpressionStatement",
                  "src": "759:35:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24744,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22231,
                      "src": "804:3:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24745,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24677,
                      "src": "810:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "804:10:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24747,
                  "nodeType": "ExpressionStatement",
                  "src": "804:10:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24748,
                      "name": "isCAKEStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22221,
                      "src": "824:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24749,
                      "name": "_isCAKEStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24679,
                      "src": "840:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "824:30:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24751,
                  "nodeType": "ExpressionStatement",
                  "src": "824:30:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24752,
                      "name": "isSameAssetDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22223,
                      "src": "864:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24753,
                      "name": "_isSameAssetDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24681,
                      "src": "885:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "864:40:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24755,
                  "nodeType": "ExpressionStatement",
                  "src": "864:40:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24756,
                      "name": "isAutoComp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22225,
                      "src": "914:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 24757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "927:5:75",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "914:18:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24759,
                  "nodeType": "ExpressionStatement",
                  "src": "914:18:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24760,
                      "name": "uniRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22241,
                      "src": "943:16:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24761,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "962:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24763,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 24762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "973:1:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "962:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "943:32:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24765,
                  "nodeType": "ExpressionStatement",
                  "src": "943:32:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24766,
                      "name": "earnedToBELIPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22329,
                      "src": "985:16:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24767,
                        "name": "_conversionPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24670,
                        "src": "1004:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                          "typeString": "struct Vault.ConversionPath memory"
                        }
                      },
                      "id": 24768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "earnedToBELIPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22358,
                      "src": "1004:32:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "985:51:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24770,
                  "nodeType": "ExpressionStatement",
                  "src": "985:51:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24771,
                      "name": "earnedToToken0Path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22332,
                      "src": "1046:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24772,
                        "name": "_conversionPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24670,
                        "src": "1067:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                          "typeString": "struct Vault.ConversionPath memory"
                        }
                      },
                      "id": 24773,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "earnedToToken0Path",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22361,
                      "src": "1067:34:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1046:55:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24775,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:55:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24776,
                      "name": "earnedToToken1Path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22335,
                      "src": "1111:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24777,
                        "name": "_conversionPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24670,
                        "src": "1132:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                          "typeString": "struct Vault.ConversionPath memory"
                        }
                      },
                      "id": 24778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "earnedToToken1Path",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22364,
                      "src": "1132:34:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1111:55:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24780,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:55:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24781,
                      "name": "token0ToEarnedPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22338,
                      "src": "1176:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24782,
                        "name": "_conversionPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24670,
                        "src": "1197:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                          "typeString": "struct Vault.ConversionPath memory"
                        }
                      },
                      "id": 24783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0ToEarnedPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22367,
                      "src": "1197:34:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1176:55:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24785,
                  "nodeType": "ExpressionStatement",
                  "src": "1176:55:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24786,
                      "name": "token1ToEarnedPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22341,
                      "src": "1241:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24787,
                        "name": "_conversionPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24670,
                        "src": "1262:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                          "typeString": "struct Vault.ConversionPath memory"
                        }
                      },
                      "id": 24788,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1ToEarnedPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22370,
                      "src": "1262:34:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1241:55:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24790,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:55:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24791,
                      "name": "controllerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22261,
                      "src": "1307:13:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24792,
                        "name": "_fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24672,
                        "src": "1323:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$22355_memory_ptr",
                          "typeString": "struct Vault.FeeConfig memory"
                        }
                      },
                      "id": 24793,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "controllerFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22348,
                      "src": "1323:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1307:35:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24795,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:35:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24796,
                      "name": "rewardsAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22290,
                      "src": "1352:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24797,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "1369:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24799,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 24798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:2:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1369:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1352:31:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24801,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:31:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24802,
                      "name": "buyBackRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22270,
                      "src": "1393:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24803,
                        "name": "_fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24672,
                        "src": "1407:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$22355_memory_ptr",
                          "typeString": "struct Vault.FeeConfig memory"
                        }
                      },
                      "id": 24804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buyBackRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22350,
                      "src": "1407:17:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:31:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24806,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:31:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24807,
                      "name": "buyBackAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22288,
                      "src": "1434:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24808,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24675,
                        "src": "1451:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24810,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3131",
                        "id": 24809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:2:75",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1451:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1434:31:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24812,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:31:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24813,
                      "name": "earnToBeliRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22279,
                      "src": "1475:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1492:1:75",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1475:18:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24816,
                  "nodeType": "ExpressionStatement",
                  "src": "1475:18:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24818,
                        "name": "beliFarmAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22245,
                        "src": "1522:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24817,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "1504:17:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 24819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:34:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24820,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:34:75"
                }
              ]
            },
            "documentation": null,
            "id": 24822,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24684,
                      "name": "_erc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24668,
                      "src": "418:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ErcConfig_$22346_memory_ptr",
                        "typeString": "struct Vault.ErcConfig memory"
                      }
                    },
                    "id": 24685,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22343,
                    "src": "418:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24686,
                      "name": "_erc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24668,
                      "src": "429:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ErcConfig_$22346_memory_ptr",
                        "typeString": "struct Vault.ErcConfig memory"
                      }
                    },
                    "id": 24687,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22345,
                    "src": "429:11:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 24688,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24683,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1250,
                  "src": "412:5:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1250_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "412:29:75"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 24682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24668,
                  "mutability": "mutable",
                  "name": "_erc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "176:21:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ErcConfig_$22346_memory_ptr",
                    "typeString": "struct Vault.ErcConfig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24667,
                    "name": "ErcConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22346,
                    "src": "176:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ErcConfig_$22346_storage_ptr",
                      "typeString": "struct Vault.ErcConfig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24670,
                  "mutability": "mutable",
                  "name": "_conversionPath",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "207:37:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConversionPath_$22371_memory_ptr",
                    "typeString": "struct Vault.ConversionPath"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24669,
                    "name": "ConversionPath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22371,
                    "src": "207:14:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConversionPath_$22371_storage_ptr",
                      "typeString": "struct Vault.ConversionPath"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24672,
                  "mutability": "mutable",
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "254:22:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FeeConfig_$22355_memory_ptr",
                    "typeString": "struct Vault.FeeConfig"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24671,
                    "name": "FeeConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22355,
                    "src": "254:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeConfig_$22355_storage_ptr",
                      "typeString": "struct Vault.FeeConfig"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24675,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "286:27:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24673,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "286:7:75",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24674,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "286:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24677,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "323:12:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24679,
                  "mutability": "mutable",
                  "name": "_isCAKEStaking",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "345:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24678,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24681,
                  "mutability": "mutable",
                  "name": "_isSameAssetDeposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24822,
                  "src": "374:24:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24680,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:238:75"
            },
            "returnParameters": {
              "id": 24689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:75"
            },
            "scope": 24844,
            "src": "155:1390:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22651
            ],
            "body": {
              "id": 24826,
              "nodeType": "Block",
              "src": "1586:2:75",
              "statements": []
            },
            "documentation": null,
            "id": 24827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_farm",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1577:8:75"
            },
            "parameters": {
              "id": 24823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1565:2:75"
            },
            "returnParameters": {
              "id": 24825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:0:75"
            },
            "scope": 24844,
            "src": "1551:37:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              22676
            ],
            "body": {
              "id": 24833,
              "nodeType": "Block",
              "src": "1647:2:75",
              "statements": []
            },
            "documentation": null,
            "id": 24834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unfarm",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1638:8:75"
            },
            "parameters": {
              "id": 24830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24829,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 24834,
                  "src": "1611:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1610:18:75"
            },
            "returnParameters": {
              "id": 24832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:0:75"
            },
            "scope": 24844,
            "src": "1594:55:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              23236
            ],
            "body": {
              "id": 24842,
              "nodeType": "Block",
              "src": "1714:2:75",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "d389800f",
            "id": 24843,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 24838,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24837,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "1687:12:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1687:12:75"
              },
              {
                "arguments": null,
                "id": 24840,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24839,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2400,
                  "src": "1700:13:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1700:13:75"
              }
            ],
            "name": "earn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24836,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1678:8:75"
            },
            "parameters": {
              "id": 24835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:2:75"
            },
            "returnParameters": {
              "id": 24841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1714:0:75"
            },
            "scope": 24844,
            "src": "1655:61:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24845,
        "src": "114:1604:75"
      }
    ],
    "src": "32:1686:75"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/Vault_BELI.sol",
      "exportedSymbols": {
        "VaultStakingBeli": [
          24844
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 24662,
        "name": "PragmaDirective",
        "src": "32:23:75"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 24663,
        "name": "PragmaDirective",
        "src": "56:33:75"
      },
      {
        "attributes": {
          "SourceUnit": 23762,
          "absolutePath": "project:/src/contracts/Vault.sol",
          "file": "./Vault.sol",
          "scope": 24845,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24664,
        "name": "ImportDirective",
        "src": "91:21:75"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            392,
            1250,
            1328,
            1860,
            2444,
            2484,
            23761
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            24844,
            23761,
            1250,
            1328,
            2444,
            2484,
            392,
            1860
          ],
          "name": "VaultStakingBeli",
          "scope": 24845
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Vault",
                  "referencedDeclaration": 23761,
                  "type": "contract Vault"
                },
                "id": 24665,
                "name": "UserDefinedTypeName",
                "src": "143:5:75"
              }
            ],
            "id": 24666,
            "name": "InheritanceSpecifier",
            "src": "143:5:75"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 24844,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_erc",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Vault.ErcConfig",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "ErcConfig",
                          "referencedDeclaration": 22346,
                          "type": "struct Vault.ErcConfig"
                        },
                        "id": 24667,
                        "name": "UserDefinedTypeName",
                        "src": "176:9:75"
                      }
                    ],
                    "id": 24668,
                    "name": "VariableDeclaration",
                    "src": "176:21:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_conversionPath",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Vault.ConversionPath",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "ConversionPath",
                          "referencedDeclaration": 22371,
                          "type": "struct Vault.ConversionPath"
                        },
                        "id": 24669,
                        "name": "UserDefinedTypeName",
                        "src": "207:14:75"
                      }
                    ],
                    "id": 24670,
                    "name": "VariableDeclaration",
                    "src": "207:37:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_fees",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Vault.FeeConfig",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "FeeConfig",
                          "referencedDeclaration": 22355,
                          "type": "struct Vault.FeeConfig"
                        },
                        "id": 24671,
                        "name": "UserDefinedTypeName",
                        "src": "254:9:75"
                      }
                    ],
                    "id": 24672,
                    "name": "VariableDeclaration",
                    "src": "254:22:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_addresses",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 24673,
                            "name": "ElementaryTypeName",
                            "src": "286:7:75"
                          }
                        ],
                        "id": 24674,
                        "name": "ArrayTypeName",
                        "src": "286:9:75"
                      }
                    ],
                    "id": 24675,
                    "name": "VariableDeclaration",
                    "src": "286:27:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_pid",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24676,
                        "name": "ElementaryTypeName",
                        "src": "323:7:75"
                      }
                    ],
                    "id": 24677,
                    "name": "VariableDeclaration",
                    "src": "323:12:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_isCAKEStaking",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 24678,
                        "name": "ElementaryTypeName",
                        "src": "345:4:75"
                      }
                    ],
                    "id": 24679,
                    "name": "VariableDeclaration",
                    "src": "345:19:75"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_isSameAssetDeposit",
                      "overrides": null,
                      "scope": 24822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 24680,
                        "name": "ElementaryTypeName",
                        "src": "374:4:75"
                      }
                    ],
                    "id": 24681,
                    "name": "VariableDeclaration",
                    "src": "374:24:75"
                  }
                ],
                "id": 24682,
                "name": "ParameterList",
                "src": "166:238:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24689,
                "name": "ParameterList",
                "src": "442:0:75"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1250,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 24683,
                    "name": "Identifier",
                    "src": "412:5:75"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "name",
                      "referencedDeclaration": 22343,
                      "type": "string memory"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 24668,
                          "type": "struct Vault.ErcConfig memory",
                          "value": "_erc"
                        },
                        "id": 24684,
                        "name": "Identifier",
                        "src": "418:4:75"
                      }
                    ],
                    "id": 24685,
                    "name": "MemberAccess",
                    "src": "418:9:75"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "symbol",
                      "referencedDeclaration": 22345,
                      "type": "string memory"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 24668,
                          "type": "struct Vault.ErcConfig memory",
                          "value": "_erc"
                        },
                        "id": 24686,
                        "name": "Identifier",
                        "src": "429:4:75"
                      }
                    ],
                    "id": 24687,
                    "name": "MemberAccess",
                    "src": "429:11:75"
                  }
                ],
                "id": 24688,
                "name": "ModifierInvocation",
                "src": "412:29:75"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22243,
                              "type": "address",
                              "value": "wbnbAddress"
                            },
                            "id": 24690,
                            "name": "Identifier",
                            "src": "452:11:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24691,
                                "name": "Identifier",
                                "src": "466:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 24692,
                                "name": "Literal",
                                "src": "477:1:75"
                              }
                            ],
                            "id": 24693,
                            "name": "IndexAccess",
                            "src": "466:13:75"
                          }
                        ],
                        "id": 24694,
                        "name": "Assignment",
                        "src": "452:27:75"
                      }
                    ],
                    "id": 24695,
                    "name": "ExpressionStatement",
                    "src": "452:27:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22249,
                              "type": "address",
                              "value": "govAddress"
                            },
                            "id": 24696,
                            "name": "Identifier",
                            "src": "489:10:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24697,
                                "name": "Identifier",
                                "src": "502:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 24698,
                                "name": "Literal",
                                "src": "513:1:75"
                              }
                            ],
                            "id": 24699,
                            "name": "IndexAccess",
                            "src": "502:13:75"
                          }
                        ],
                        "id": 24700,
                        "name": "Assignment",
                        "src": "489:26:75"
                      }
                    ],
                    "id": 24701,
                    "name": "ExpressionStatement",
                    "src": "489:26:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22245,
                              "type": "address",
                              "value": "beliFarmAddress"
                            },
                            "id": 24702,
                            "name": "Identifier",
                            "src": "525:15:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24703,
                                "name": "Identifier",
                                "src": "543:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 24704,
                                "name": "Literal",
                                "src": "554:1:75"
                              }
                            ],
                            "id": 24705,
                            "name": "IndexAccess",
                            "src": "543:13:75"
                          }
                        ],
                        "id": 24706,
                        "name": "Assignment",
                        "src": "525:31:75"
                      }
                    ],
                    "id": 24707,
                    "name": "ExpressionStatement",
                    "src": "525:31:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22247,
                              "type": "address",
                              "value": "BELIAddress"
                            },
                            "id": 24708,
                            "name": "Identifier",
                            "src": "566:11:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24709,
                                "name": "Identifier",
                                "src": "580:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "33",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 3",
                                  "value": "3"
                                },
                                "id": 24710,
                                "name": "Literal",
                                "src": "591:1:75"
                              }
                            ],
                            "id": 24711,
                            "name": "IndexAccess",
                            "src": "580:13:75"
                          }
                        ],
                        "id": 24712,
                        "name": "Assignment",
                        "src": "566:27:75"
                      }
                    ],
                    "id": 24713,
                    "name": "ExpressionStatement",
                    "src": "566:27:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22233,
                              "type": "address",
                              "value": "wantAddress"
                            },
                            "id": 24714,
                            "name": "Identifier",
                            "src": "604:11:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24715,
                                "name": "Identifier",
                                "src": "618:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "34",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 4",
                                  "value": "4"
                                },
                                "id": 24716,
                                "name": "Literal",
                                "src": "629:1:75"
                              }
                            ],
                            "id": 24717,
                            "name": "IndexAccess",
                            "src": "618:13:75"
                          }
                        ],
                        "id": 24718,
                        "name": "Assignment",
                        "src": "604:27:75"
                      }
                    ],
                    "id": 24719,
                    "name": "ExpressionStatement",
                    "src": "604:27:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22235,
                              "type": "address",
                              "value": "token0Address"
                            },
                            "id": 24720,
                            "name": "Identifier",
                            "src": "641:13:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24721,
                                "name": "Identifier",
                                "src": "657:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "35",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 5",
                                  "value": "5"
                                },
                                "id": 24722,
                                "name": "Literal",
                                "src": "668:1:75"
                              }
                            ],
                            "id": 24723,
                            "name": "IndexAccess",
                            "src": "657:13:75"
                          }
                        ],
                        "id": 24724,
                        "name": "Assignment",
                        "src": "641:29:75"
                      }
                    ],
                    "id": 24725,
                    "name": "ExpressionStatement",
                    "src": "641:29:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22237,
                              "type": "address",
                              "value": "token1Address"
                            },
                            "id": 24726,
                            "name": "Identifier",
                            "src": "680:13:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24727,
                                "name": "Identifier",
                                "src": "696:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "36",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 6",
                                  "value": "6"
                                },
                                "id": 24728,
                                "name": "Literal",
                                "src": "707:1:75"
                              }
                            ],
                            "id": 24729,
                            "name": "IndexAccess",
                            "src": "696:13:75"
                          }
                        ],
                        "id": 24730,
                        "name": "Assignment",
                        "src": "680:29:75"
                      }
                    ],
                    "id": 24731,
                    "name": "ExpressionStatement",
                    "src": "680:29:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22239,
                              "type": "address",
                              "value": "earnedAddress"
                            },
                            "id": 24732,
                            "name": "Identifier",
                            "src": "719:13:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24733,
                                "name": "Identifier",
                                "src": "735:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "37",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 7",
                                  "value": "7"
                                },
                                "id": 24734,
                                "name": "Literal",
                                "src": "746:1:75"
                              }
                            ],
                            "id": 24735,
                            "name": "IndexAccess",
                            "src": "735:13:75"
                          }
                        ],
                        "id": 24736,
                        "name": "Assignment",
                        "src": "719:29:75"
                      }
                    ],
                    "id": 24737,
                    "name": "ExpressionStatement",
                    "src": "719:29:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22229,
                              "type": "address",
                              "value": "farmContractAddress"
                            },
                            "id": 24738,
                            "name": "Identifier",
                            "src": "759:19:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24739,
                                "name": "Identifier",
                                "src": "781:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "38",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 8",
                                  "value": "8"
                                },
                                "id": 24740,
                                "name": "Literal",
                                "src": "792:1:75"
                              }
                            ],
                            "id": 24741,
                            "name": "IndexAccess",
                            "src": "781:13:75"
                          }
                        ],
                        "id": 24742,
                        "name": "Assignment",
                        "src": "759:35:75"
                      }
                    ],
                    "id": 24743,
                    "name": "ExpressionStatement",
                    "src": "759:35:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22231,
                              "type": "uint256",
                              "value": "pid"
                            },
                            "id": 24744,
                            "name": "Identifier",
                            "src": "804:3:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24677,
                              "type": "uint256",
                              "value": "_pid"
                            },
                            "id": 24745,
                            "name": "Identifier",
                            "src": "810:4:75"
                          }
                        ],
                        "id": 24746,
                        "name": "Assignment",
                        "src": "804:10:75"
                      }
                    ],
                    "id": 24747,
                    "name": "ExpressionStatement",
                    "src": "804:10:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22221,
                              "type": "bool",
                              "value": "isCAKEStaking"
                            },
                            "id": 24748,
                            "name": "Identifier",
                            "src": "824:13:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24679,
                              "type": "bool",
                              "value": "_isCAKEStaking"
                            },
                            "id": 24749,
                            "name": "Identifier",
                            "src": "840:14:75"
                          }
                        ],
                        "id": 24750,
                        "name": "Assignment",
                        "src": "824:30:75"
                      }
                    ],
                    "id": 24751,
                    "name": "ExpressionStatement",
                    "src": "824:30:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22223,
                              "type": "bool",
                              "value": "isSameAssetDeposit"
                            },
                            "id": 24752,
                            "name": "Identifier",
                            "src": "864:18:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24681,
                              "type": "bool",
                              "value": "_isSameAssetDeposit"
                            },
                            "id": 24753,
                            "name": "Identifier",
                            "src": "885:19:75"
                          }
                        ],
                        "id": 24754,
                        "name": "Assignment",
                        "src": "864:40:75"
                      }
                    ],
                    "id": 24755,
                    "name": "ExpressionStatement",
                    "src": "864:40:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22225,
                              "type": "bool",
                              "value": "isAutoComp"
                            },
                            "id": 24756,
                            "name": "Identifier",
                            "src": "914:10:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 24757,
                            "name": "Literal",
                            "src": "927:5:75"
                          }
                        ],
                        "id": 24758,
                        "name": "Assignment",
                        "src": "914:18:75"
                      }
                    ],
                    "id": 24759,
                    "name": "ExpressionStatement",
                    "src": "914:18:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22241,
                              "type": "address",
                              "value": "uniRouterAddress"
                            },
                            "id": 24760,
                            "name": "Identifier",
                            "src": "943:16:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24761,
                                "name": "Identifier",
                                "src": "962:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "39",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 9",
                                  "value": "9"
                                },
                                "id": 24762,
                                "name": "Literal",
                                "src": "973:1:75"
                              }
                            ],
                            "id": 24763,
                            "name": "IndexAccess",
                            "src": "962:13:75"
                          }
                        ],
                        "id": 24764,
                        "name": "Assignment",
                        "src": "943:32:75"
                      }
                    ],
                    "id": 24765,
                    "name": "ExpressionStatement",
                    "src": "943:32:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22329,
                              "type": "address[] storage ref",
                              "value": "earnedToBELIPath"
                            },
                            "id": 24766,
                            "name": "Identifier",
                            "src": "985:16:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "earnedToBELIPath",
                              "referencedDeclaration": 22358,
                              "type": "address[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24670,
                                  "type": "struct Vault.ConversionPath memory",
                                  "value": "_conversionPath"
                                },
                                "id": 24767,
                                "name": "Identifier",
                                "src": "1004:15:75"
                              }
                            ],
                            "id": 24768,
                            "name": "MemberAccess",
                            "src": "1004:32:75"
                          }
                        ],
                        "id": 24769,
                        "name": "Assignment",
                        "src": "985:51:75"
                      }
                    ],
                    "id": 24770,
                    "name": "ExpressionStatement",
                    "src": "985:51:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22332,
                              "type": "address[] storage ref",
                              "value": "earnedToToken0Path"
                            },
                            "id": 24771,
                            "name": "Identifier",
                            "src": "1046:18:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "earnedToToken0Path",
                              "referencedDeclaration": 22361,
                              "type": "address[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24670,
                                  "type": "struct Vault.ConversionPath memory",
                                  "value": "_conversionPath"
                                },
                                "id": 24772,
                                "name": "Identifier",
                                "src": "1067:15:75"
                              }
                            ],
                            "id": 24773,
                            "name": "MemberAccess",
                            "src": "1067:34:75"
                          }
                        ],
                        "id": 24774,
                        "name": "Assignment",
                        "src": "1046:55:75"
                      }
                    ],
                    "id": 24775,
                    "name": "ExpressionStatement",
                    "src": "1046:55:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22335,
                              "type": "address[] storage ref",
                              "value": "earnedToToken1Path"
                            },
                            "id": 24776,
                            "name": "Identifier",
                            "src": "1111:18:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "earnedToToken1Path",
                              "referencedDeclaration": 22364,
                              "type": "address[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24670,
                                  "type": "struct Vault.ConversionPath memory",
                                  "value": "_conversionPath"
                                },
                                "id": 24777,
                                "name": "Identifier",
                                "src": "1132:15:75"
                              }
                            ],
                            "id": 24778,
                            "name": "MemberAccess",
                            "src": "1132:34:75"
                          }
                        ],
                        "id": 24779,
                        "name": "Assignment",
                        "src": "1111:55:75"
                      }
                    ],
                    "id": 24780,
                    "name": "ExpressionStatement",
                    "src": "1111:55:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22338,
                              "type": "address[] storage ref",
                              "value": "token0ToEarnedPath"
                            },
                            "id": 24781,
                            "name": "Identifier",
                            "src": "1176:18:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "token0ToEarnedPath",
                              "referencedDeclaration": 22367,
                              "type": "address[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24670,
                                  "type": "struct Vault.ConversionPath memory",
                                  "value": "_conversionPath"
                                },
                                "id": 24782,
                                "name": "Identifier",
                                "src": "1197:15:75"
                              }
                            ],
                            "id": 24783,
                            "name": "MemberAccess",
                            "src": "1197:34:75"
                          }
                        ],
                        "id": 24784,
                        "name": "Assignment",
                        "src": "1176:55:75"
                      }
                    ],
                    "id": 24785,
                    "name": "ExpressionStatement",
                    "src": "1176:55:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22341,
                              "type": "address[] storage ref",
                              "value": "token1ToEarnedPath"
                            },
                            "id": 24786,
                            "name": "Identifier",
                            "src": "1241:18:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "token1ToEarnedPath",
                              "referencedDeclaration": 22370,
                              "type": "address[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24670,
                                  "type": "struct Vault.ConversionPath memory",
                                  "value": "_conversionPath"
                                },
                                "id": 24787,
                                "name": "Identifier",
                                "src": "1262:15:75"
                              }
                            ],
                            "id": 24788,
                            "name": "MemberAccess",
                            "src": "1262:34:75"
                          }
                        ],
                        "id": 24789,
                        "name": "Assignment",
                        "src": "1241:55:75"
                      }
                    ],
                    "id": 24790,
                    "name": "ExpressionStatement",
                    "src": "1241:55:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22261,
                              "type": "uint256",
                              "value": "controllerFee"
                            },
                            "id": 24791,
                            "name": "Identifier",
                            "src": "1307:13:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "controllerFee",
                              "referencedDeclaration": 22348,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24672,
                                  "type": "struct Vault.FeeConfig memory",
                                  "value": "_fees"
                                },
                                "id": 24792,
                                "name": "Identifier",
                                "src": "1323:5:75"
                              }
                            ],
                            "id": 24793,
                            "name": "MemberAccess",
                            "src": "1323:19:75"
                          }
                        ],
                        "id": 24794,
                        "name": "Assignment",
                        "src": "1307:35:75"
                      }
                    ],
                    "id": 24795,
                    "name": "ExpressionStatement",
                    "src": "1307:35:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22290,
                              "type": "address",
                              "value": "rewardsAddress"
                            },
                            "id": 24796,
                            "name": "Identifier",
                            "src": "1352:14:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24797,
                                "name": "Identifier",
                                "src": "1369:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 24798,
                                "name": "Literal",
                                "src": "1380:2:75"
                              }
                            ],
                            "id": 24799,
                            "name": "IndexAccess",
                            "src": "1369:14:75"
                          }
                        ],
                        "id": 24800,
                        "name": "Assignment",
                        "src": "1352:31:75"
                      }
                    ],
                    "id": 24801,
                    "name": "ExpressionStatement",
                    "src": "1352:31:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22270,
                              "type": "uint256",
                              "value": "buyBackRate"
                            },
                            "id": 24802,
                            "name": "Identifier",
                            "src": "1393:11:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "buyBackRate",
                              "referencedDeclaration": 22350,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24672,
                                  "type": "struct Vault.FeeConfig memory",
                                  "value": "_fees"
                                },
                                "id": 24803,
                                "name": "Identifier",
                                "src": "1407:5:75"
                              }
                            ],
                            "id": 24804,
                            "name": "MemberAccess",
                            "src": "1407:17:75"
                          }
                        ],
                        "id": 24805,
                        "name": "Assignment",
                        "src": "1393:31:75"
                      }
                    ],
                    "id": 24806,
                    "name": "ExpressionStatement",
                    "src": "1393:31:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22288,
                              "type": "address",
                              "value": "buyBackAddress"
                            },
                            "id": 24807,
                            "name": "Identifier",
                            "src": "1434:14:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24675,
                                  "type": "address[] memory",
                                  "value": "_addresses"
                                },
                                "id": 24808,
                                "name": "Identifier",
                                "src": "1451:10:75"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3131",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 11",
                                  "value": "11"
                                },
                                "id": 24809,
                                "name": "Literal",
                                "src": "1462:2:75"
                              }
                            ],
                            "id": 24810,
                            "name": "IndexAccess",
                            "src": "1451:14:75"
                          }
                        ],
                        "id": 24811,
                        "name": "Assignment",
                        "src": "1434:31:75"
                      }
                    ],
                    "id": 24812,
                    "name": "ExpressionStatement",
                    "src": "1434:31:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22279,
                              "type": "uint256",
                              "value": "earnToBeliRate"
                            },
                            "id": 24813,
                            "name": "Identifier",
                            "src": "1475:14:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 24814,
                            "name": "Literal",
                            "src": "1492:1:75"
                          }
                        ],
                        "id": 24815,
                        "name": "Assignment",
                        "src": "1475:18:75"
                      }
                    ],
                    "id": 24816,
                    "name": "ExpressionStatement",
                    "src": "1475:18:75"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 391,
                              "type": "function (address)",
                              "value": "transferOwnership"
                            },
                            "id": 24817,
                            "name": "Identifier",
                            "src": "1504:17:75"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22245,
                              "type": "address",
                              "value": "beliFarmAddress"
                            },
                            "id": 24818,
                            "name": "Identifier",
                            "src": "1522:15:75"
                          }
                        ],
                        "id": 24819,
                        "name": "FunctionCall",
                        "src": "1504:34:75"
                      }
                    ],
                    "id": 24820,
                    "name": "ExpressionStatement",
                    "src": "1504:34:75"
                  }
                ],
                "id": 24821,
                "name": "Block",
                "src": "442:1103:75"
              }
            ],
            "id": 24822,
            "name": "FunctionDefinition",
            "src": "155:1390:75"
          },
          {
            "attributes": {
              "baseFunctions": [
                22651
              ],
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_farm",
              "scope": 24844,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 24824,
                "name": "OverrideSpecifier",
                "src": "1577:8:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24823,
                "name": "ParameterList",
                "src": "1565:2:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24825,
                "name": "ParameterList",
                "src": "1586:0:75"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 24826,
                "name": "Block",
                "src": "1586:2:75"
              }
            ],
            "id": 24827,
            "name": "FunctionDefinition",
            "src": "1551:37:75"
          },
          {
            "attributes": {
              "baseFunctions": [
                22676
              ],
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_unfarm",
              "scope": 24844,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 24831,
                "name": "OverrideSpecifier",
                "src": "1638:8:75"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "overrides": null,
                      "scope": 24834,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24828,
                        "name": "ElementaryTypeName",
                        "src": "1611:7:75"
                      }
                    ],
                    "id": 24829,
                    "name": "VariableDeclaration",
                    "src": "1611:16:75"
                  }
                ],
                "id": 24830,
                "name": "ParameterList",
                "src": "1610:18:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24832,
                "name": "ParameterList",
                "src": "1647:0:75"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 24833,
                "name": "Block",
                "src": "1647:2:75"
              }
            ],
            "id": 24834,
            "name": "FunctionDefinition",
            "src": "1594:55:75"
          },
          {
            "attributes": {
              "baseFunctions": [
                23236
              ],
              "documentation": null,
              "functionSelector": "d389800f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "earn",
              "scope": 24844,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 24836,
                "name": "OverrideSpecifier",
                "src": "1678:8:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24835,
                "name": "ParameterList",
                "src": "1668:2:75"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24841,
                "name": "ParameterList",
                "src": "1714:0:75"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2483,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 24837,
                    "name": "Identifier",
                    "src": "1687:12:75"
                  }
                ],
                "id": 24838,
                "name": "ModifierInvocation",
                "src": "1687:12:75"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2400,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 24839,
                    "name": "Identifier",
                    "src": "1700:13:75"
                  }
                ],
                "id": 24840,
                "name": "ModifierInvocation",
                "src": "1700:13:75"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 24842,
                "name": "Block",
                "src": "1714:2:75"
              }
            ],
            "id": 24843,
            "name": "FunctionDefinition",
            "src": "1655:61:75"
          }
        ],
        "id": 24844,
        "name": "ContractDefinition",
        "src": "114:1604:75"
      }
    ],
    "id": 24845,
    "name": "SourceUnit",
    "src": "32:1686:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x200c92aaea275302bf641e37f7a5dda63f445f08f4fc74a5cde7fd643f609e09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyBackAddress",
              "type": "address"
            }
          ],
          "name": "SetBuyBackAddress",
          "type": "event"
        },
        "0x91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd54": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "govAddress",
              "type": "address"
            }
          ],
          "name": "SetGov",
          "type": "event"
        },
        "0xa69f1931be99336e049905baa11d21ed44204d7686e46b4344404d80d47c2988": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "rewardsAddress",
              "type": "address"
            }
          ],
          "name": "SetRewardsAddress",
          "type": "event"
        },
        "0xcb4ecc62ba7efb533c814d48b7dc1c8f06063d93bf32c3730c1ec47011e8747a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "entranceFeeFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawFeeFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "controllerFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "buyBackRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "earnToBeliRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "slippageFactor",
              "type": "uint256"
            }
          ],
          "name": "SetSettings",
          "type": "event"
        },
        "0x384f1dcb79da4071839c471d7c81884a43fb946a527f3661fdee5904adc8f657": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "uniRouterAddress",
              "type": "address"
            }
          ],
          "name": "SetUniRouterAddress",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDd9E9c0f0351fB4c78BA3038d36Ca81289d133Ab",
      "transactionHash": "0x58ddf435a8b06860140a654eb777358a089099938a3087a963976a2ea99bd301"
    },
    "1337": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x200c92aaea275302bf641e37f7a5dda63f445f08f4fc74a5cde7fd643f609e09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "buyBackAddress",
              "type": "address"
            }
          ],
          "name": "SetBuyBackAddress",
          "type": "event"
        },
        "0x91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd54": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "govAddress",
              "type": "address"
            }
          ],
          "name": "SetGov",
          "type": "event"
        },
        "0xa69f1931be99336e049905baa11d21ed44204d7686e46b4344404d80d47c2988": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "rewardsAddress",
              "type": "address"
            }
          ],
          "name": "SetRewardsAddress",
          "type": "event"
        },
        "0xcb4ecc62ba7efb533c814d48b7dc1c8f06063d93bf32c3730c1ec47011e8747a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "entranceFeeFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawFeeFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "controllerFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "buyBackRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "earnToBeliRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "slippageFactor",
              "type": "uint256"
            }
          ],
          "name": "SetSettings",
          "type": "event"
        },
        "0x384f1dcb79da4071839c471d7c81884a43fb946a527f3661fdee5904adc8f657": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "uniRouterAddress",
              "type": "address"
            }
          ],
          "name": "SetUniRouterAddress",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x35d2Ca8CC92Dc0A5351B91242341b294DB1be8d9",
      "transactionHash": "0xbdec864aab83b6c4ac762b6438dcf7149c745068db62b793062d2b8c8e4deb7e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-02T01:51:39.365Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}